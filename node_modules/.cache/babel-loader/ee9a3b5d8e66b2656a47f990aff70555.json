{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/Intro.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport SubmitContext from './utils/submitContext';\nimport { allSubsInfo } from './utils/allSubmission';\nimport db from './utils/firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    margin: '0',\n    background: 'rgba(255,0.5)',\n    backdropFilter: 'blur(15px)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 2s ease'\n  },\n  removeContainer: {\n    backdropFilter: 'blur(0px)',\n    visibility: 'hidden',\n    transition: 'all 2s ease'\n  },\n  image: {\n    border: '5px solid black',\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 1s ease',\n    [theme.breakpoints.up('md')]: {\n      width: '600px',\n      height: '600px'\n    },\n    [theme.breakpoints.down('md')]: {\n      width: '400px',\n      height: '400px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '300px',\n      height: '300px'\n    }\n  },\n  removeImage: {\n    border: '5px solid red',\n    visibility: 'hidden',\n    display: 'none',\n    transition: 'all 1s ease'\n  }\n}));\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']; // let latestSubmission = picsOptions[allSubsInfo[allSubsInfo.length - 1].pic];\n\nexport default function Intro(_ref) {\n  _s();\n\n  let {\n    allSubmissions\n  } = _ref;\n  const classes = useStyles();\n  const {\n    submitted\n  } = useContext(SubmitContext);\n  const [transitionContainer, setTransitionContainer] = useState(false);\n  const [transitionImage, setTransitionImage] = useState(false);\n  const [allSubs, setAllSubs] = useState();\n  const [latestPic, setLatestPic] = useState('');\n\n  const handleReveal = () => {\n    setTransitionContainer(classes.removeContainer);\n    setTransitionImage(classes.removeImage);\n  };\n\n  let currentImg;\n  let latestSubmissionNo;\n  useEffect(() => {\n    console.log('all subs in content array', allSubs);\n    let responseArray = [];\n    getDocs(collection(db, \"Responses\")).then(response => {\n      response.forEach(doc => {\n        responseArray.push(doc.data());\n        setAllSubs(responseArray); // setAllSubs(doc.data());\n      });\n    });\n  }, []);\n  useEffect(() => {\n    if (allSubs) {\n      console.log('all subs in content array', allSubs[allSubs.length - 1]);\n      setLatestPic(allSubs[allSubs.length - 1].pic);\n    }\n  }, [allSubs]);\n  useEffect(() => {\n    if (submitted) {\n      handleReveal();\n    }\n\n    return;\n  }, [submitted]); // console.log('res array intro', allSubmissions[0].pic);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.container} ${transitionContainer}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: `${classes.image} ${classes.removeImage}}`,\n      id: \"answer1\",\n      src: picsOptions[parseInt(latestPic)],\n      width: \"500px\",\n      height: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Intro, \"iHBtLdqix7A1R+4MADWXa+x1bII=\", false, function () {\n  return [useStyles];\n});\n\n_c = Intro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Intro\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/Intro.js"],"names":["makeStyles","useState","useContext","useEffect","SubmitContext","allSubsInfo","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","useStyles","theme","container","position","top","left","width","height","margin","background","backdropFilter","display","justifyContent","alignItems","visibility","transition","removeContainer","image","border","breakpoints","up","down","removeImage","picsOptions","Intro","allSubmissions","classes","submitted","transitionContainer","setTransitionContainer","transitionImage","setTransitionImage","allSubs","setAllSubs","latestPic","setLatestPic","handleReveal","currentImg","latestSubmissionNo","console","log","responseArray","then","response","forEach","push","data","length","pic","parseInt"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport SubmitContext from './utils/submitContext';\nimport { allSubsInfo } from './utils/allSubmission';\nimport db from './utils/firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    margin: '0',\n    background: 'rgba(255,0.5)',\n    backdropFilter: 'blur(15px)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 2s ease',\n  },\n  removeContainer: {\n    backdropFilter: 'blur(0px)',\n    visibility: 'hidden',\n    transition: 'all 2s ease',\n  },\n  image: {\n    border: '5px solid black',\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 1s ease',\n    [theme.breakpoints.up('md')]: {\n      width: '600px',\n      height: '600px'\n    },\n    [theme.breakpoints.down('md')]: {\n      width: '400px',\n      height: '400px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '300px',\n      height: '300px'\n    },\n  },\n  removeImage: {\n    border: '5px solid red',\n    visibility: 'hidden',\n    display: 'none',\n    transition: 'all 1s ease'\n  }\n}));\n\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n// let latestSubmission = picsOptions[allSubsInfo[allSubsInfo.length - 1].pic];\n\nexport default function Intro({ allSubmissions }) {\n  const classes = useStyles();\n  const {submitted} = useContext(SubmitContext);\n  const [transitionContainer, setTransitionContainer] = useState(false);\n  const [transitionImage, setTransitionImage] = useState(false);\n  const [allSubs, setAllSubs] = useState();\n  const [latestPic, setLatestPic] = useState('');\n\n\n  const handleReveal = () => {\n    setTransitionContainer(classes.removeContainer);\n    setTransitionImage(classes.removeImage);\n  }\n\n  let currentImg;\n  let latestSubmissionNo;\n\n  useEffect(() => {\n    console.log('all subs in content array', allSubs);\n    let responseArray = [];\n    getDocs(collection(db, \"Responses\"))\n      .then(response => {\n        response.forEach((doc) => {\n          responseArray.push(doc.data());\n          setAllSubs(responseArray);\n          // setAllSubs(doc.data());\n        });\n      });\n    }, []);\n\n  useEffect(()=> {\n    if(allSubs){\n      console.log('all subs in content array', allSubs[allSubs.length - 1]);\n      setLatestPic(allSubs[allSubs.length - 1].pic);\n    }\n  },[allSubs]);\n\n  useEffect(() => {\n    if (submitted) {\n      handleReveal();\n    }\n    return;\n  }, [submitted]);\n\n  // console.log('res array intro', allSubmissions[0].pic);\n\n  return (\n    <div className={`${classes.container} ${transitionContainer}`}>\n      <img className={`${classes.image} ${classes.removeImage}}`} id=\"answer1\" src={picsOptions[parseInt(latestPic)]} width='500px' height='500px' />\n      {/* {allSubmissions} */}\n      {/* <div>{latestSubmission}</div> */}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}