{"ast":null,"code":"import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nlet allSubs = [];\nlet orderedPics = [];\nconst myData = [];\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png'];\n\nconst getSubmission = async () => {\n  // Get all documents in a collection\n  const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n  querySnapshot.forEach(doc => {\n    // console.log('Submitter Name:', doc.data().name);\n    allSubs.push(doc.data());\n  });\n  let largest = allSubs[0].no;\n\n  for (let i = 1; i < allSubs.length; i++) {\n    if (allSubs[i].no > largest) {\n      orderedPics.push(parseInt(allSubs[largest - 1].pic));\n      largest = allSubs[i].no;\n    }\n  }\n\n  console.log('All Submission', allSubs[largest - 1].no);\n  console.log('Ordered Submission', orderedPics);\n};\n\nfor (let i = 0; i < orderedPics.length; i++) {\n  myData.push({\n    key: i + 1,\n    picture: picsOptions[orderedPics[i]]\n  });\n}\n\nconsole.log(' Submission Pics', myData);\nconst allSubmissions = getSubmission();\nexport default allSubmissions;","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/utils/allSubmission.js"],"names":["React","Component","useState","useEffect","useRef","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","allSubs","orderedPics","myData","picsOptions","getSubmission","querySnapshot","forEach","push","data","largest","no","i","length","parseInt","pic","console","log","key","picture","allSubmissions"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,GAA9C,EAAmDC,UAAnD,QAAqE,oBAArE;AAGA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,MAAMC,MAAM,GAAG,EAAf;AAEA,MAAMC,WAAW,GAAG,CAAC,+BAAD,EAAkC,+BAAlC,EAAmE,+BAAnE,EAAoG,+BAApG,CAApB;;AAGA,MAAMC,aAAa,GAAG,YAAY;AAChC;AACA,QAAMC,aAAa,GAAG,MAAMR,OAAO,CAACH,UAAU,CAACD,EAAD,EAAK,cAAL,CAAX,CAAnC;AACAY,EAAAA,aAAa,CAACC,OAAd,CAAuBR,GAAD,IAAS;AAC7B;AACAE,IAAAA,OAAO,CAACO,IAAR,CAAaT,GAAG,CAACU,IAAJ,EAAb;AACD,GAHD;AAKA,MAAIC,OAAO,GAAGT,OAAO,CAAC,CAAD,CAAP,CAAWU,EAAzB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,OAAO,CAACY,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIX,OAAO,CAACW,CAAD,CAAP,CAAWD,EAAX,GAAgBD,OAApB,EAA6B;AAC3BR,MAAAA,WAAW,CAACM,IAAZ,CAAiBM,QAAQ,CAACb,OAAO,CAACS,OAAO,GAAG,CAAX,CAAP,CAAqBK,GAAtB,CAAzB;AACAL,MAAAA,OAAO,GAAGT,OAAO,CAACW,CAAD,CAAP,CAAWD,EAArB;AACD;AACF;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BhB,OAAO,CAACS,OAAO,GAAG,CAAX,CAAP,CAAqBC,EAAnD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCf,WAAlC;AACD,CAjBD;;AAkBA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,WAAW,CAACW,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CT,EAAAA,MAAM,CAACK,IAAP,CAAY;AAAEU,IAAAA,GAAG,EAAEN,CAAC,GAAG,CAAX;AAAcO,IAAAA,OAAO,EAAEf,WAAW,CAACF,WAAW,CAACU,CAAD,CAAZ;AAAlC,GAAZ;AACD;;AAEDI,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCd,MAAhC;AAEA,MAAMiB,cAAc,GAAGf,aAAa,EAApC;AAGA,eAAee,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\n\nlet allSubs = [];\nlet orderedPics = [];\nconst myData = [];\n\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n\n\nconst getSubmission = async () => {\n  // Get all documents in a collection\n  const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n  querySnapshot.forEach((doc) => {\n    // console.log('Submitter Name:', doc.data().name);\n    allSubs.push(doc.data());\n  });\n\n  let largest = allSubs[0].no;\n  for (let i = 1; i < allSubs.length; i++) {\n    if (allSubs[i].no > largest) {\n      orderedPics.push(parseInt(allSubs[largest - 1].pic));\n      largest = allSubs[i].no;\n    }\n  }\n  console.log('All Submission', allSubs[largest - 1].no);\n  console.log('Ordered Submission', orderedPics);\n};\nfor (let i = 0; i < orderedPics.length; i++) {\n  myData.push({ key: i + 1, picture: picsOptions[orderedPics[i]] })\n}\n\nconsole.log(' Submission Pics', myData);\n\nconst allSubmissions = getSubmission();\n\n\nexport default allSubmissions;"]},"metadata":{},"sourceType":"module"}