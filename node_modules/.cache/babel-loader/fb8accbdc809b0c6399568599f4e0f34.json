{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/Content.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, useTheme } from '@material-ui/core';\nimport { Row, Col } from 'react-simple-flex-grid';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport { allSubsInfo } from './utils/allSubmission';\nimport React, { useEffect, useState } from 'react';\nimport db from './utils/firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  layer: {\n    width: '100vw',\n    zIndex: 0,\n    position: 'absolute',\n    top: 0,\n    left: 0\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  container: {\n    display: 'grid',\n    [theme.breakpoints.down('md')]: {\n      gridTemplateColumns: 'repeat(auto-fill, 10%)'\n    },\n    [theme.breakpoints.up('md')]: {\n      gridTemplateColumns: 'repeat(auto-fill, 5%)'\n    }\n  },\n  item: {\n    border: '1px solid black',\n    aspectRatio: '1/1'\n  }\n}));\nexport default function Content(_ref) {\n  _s();\n\n  let {\n    allSubmissions\n  } = _ref;\n  const classes = useStyles();\n  const picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png'];\n  const [allSubs, setAllSubs] = useState([]); // Fetch all pre-existing images\n\n  useEffect(() => {\n    let responseArray = [];\n    getDocs(collection(db, \"Responses\")).then(response => {\n      response.forEach(doc => {\n        responseArray.push(doc.data());\n      });\n    });\n    setAllSubs(responseArray);\n  }, []);\n  console.log('res array content', allSubs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.layer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: allSubs.map((result, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.item,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"inherit\",\n              children: [\"Submitted by \", result.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n              children: [\"at \", result.time.toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this),\n          followCursor: true,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.image,\n            src: picsOptions[result.pic - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"ommgpRZqyzd/4hya3z9Ypz+sbjQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/Content.jsx"],"names":["makeStyles","useTheme","Row","Col","allSubsInfo","React","useEffect","useState","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","Typography","Tooltip","useStyles","theme","layer","width","zIndex","position","top","left","image","height","container","display","breakpoints","down","gridTemplateColumns","up","item","border","aspectRatio","Content","allSubmissions","classes","picsOptions","allSubs","setAllSubs","responseArray","then","response","forEach","push","data","console","log","map","result","key","name","time","toString","pic"],"mappings":"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","sourcesContent":["import { makeStyles, useTheme } from '@material-ui/core';\nimport { Row, Col } from 'react-simple-flex-grid';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport { allSubsInfo } from './utils/allSubmission';\nimport React, { useEffect, useState } from 'react';\nimport db from './utils/firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport Typography from '@material-ui/core/Typography'\nimport Tooltip from '@mui/material/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  layer: {\n    width: '100vw',\n    zIndex: 0,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n  container: {\n    display: 'grid',\n    [theme.breakpoints.down('md')]: {\n      gridTemplateColumns: 'repeat(auto-fill, 10%)',\n    },\n    [theme.breakpoints.up('md')]: {\n      gridTemplateColumns: 'repeat(auto-fill, 5%)',\n    },\n  },\n  item: {\n    border: '1px solid black',\n    aspectRatio: '1/1'\n  },\n}));\n\nexport default function Content({ allSubmissions }) {\n  const classes = useStyles();\n  const picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n  const [allSubs, setAllSubs] = useState([])\n\n  // Fetch all pre-existing images\n  useEffect(() => {\n    let responseArray = [];\n    getDocs(collection(db, \"Responses\"))\n      .then(response => {\n        response.forEach((doc) => {\n          responseArray.push(doc.data());\n        });\n      });\n\n    setAllSubs(responseArray);\n  }, []);\n\n  console.log('res array content', allSubs);\n\n  return (\n    <div className={classes.layer}>\n      <div className={classes.container}>\n        {allSubs.map((result, key) =>\n          <div className={classes.item}>\n            <Tooltip title={\n              <React.Fragment>\n                <Typography color=\"inherit\">Submitted by {result.name}</Typography>\n                <em>at {result.time.toString()}</em>\n              </React.Fragment>\n            } followCursor>\n              <img className={classes.image} src={picsOptions[result.pic - 1]} />\n            </Tooltip>\n          </div>\n        )}\n      </div>\n     </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}