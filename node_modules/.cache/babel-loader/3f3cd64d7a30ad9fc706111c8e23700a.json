{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA6LdJh0KDusKId6RiuzCY0wBtPcke1nyo\",\n  authDomain: \"gametheory-1f44e.firebaseapp.com\",\n  projectId: \"gametheory-1f44e\",\n  storageBucket: \"gametheory-1f44e.appspot.com\",\n  messagingSenderId: \"660278970969\",\n  appId: \"1:660278970969:web:b49cd16f2140e53018ff48\",\n  measurementId: \"G-Y68GG5ZMVV\"\n};\nconst app = initializeApp(firebaseConfig); // const analytics = getAnalytics(init);\n\nconst db = getFirestore(app); // console.log(firestoreDB);\n\nfunction Form() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [ig, setIg] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    // Update the document title using the browser API\n    const unsub = onSnapshot(doc(db, \"Response\", \"SF\"), doc => {\n      console.log(\"Current data: \", doc.data());\n    });\n  });\n  let responses = [];\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n    const elementsArray = [...e.target.elements];\n    console.log(elementsArray);\n    const formData = elementsArray.reduce((accumulator, currentValue) => {\n      if (currentValue.id) {\n        accumulator[currentValue.id] = currentValue.value;\n      }\n\n      return accumulator;\n    }, {});\n    console.log({\n      formData\n    });\n\n    try {\n      const docRef = await setDoc(collection(db, \"Response\"), {\n        name: name,\n        ig: ig,\n        pic: pic\n      });\n      responses.push(docRef.id);\n      console.log(\"Document written with ID: \", docRef.id);\n      console.log(\"Info submitted so far: \", responses);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n\n    const querySnapshot = await getDocs(collection(db, \"Response\"));\n    querySnapshot.forEach(doc => {\n      console.log(`${doc.id} => ${doc.data()}`);\n    });\n\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          ig: ig,\n          pic: pic\n        })\n      });\n      let resJson = await res.json();\n\n      if (res.status === 200) {\n        setName(\"\");\n        setIg(\"\");\n        setPic(\"\");\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        id: \"name\",\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"ig\",\n        value: ig,\n        placeholder: \"Instagram\",\n        onChange: e => setIg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"pic\",\n        value: pic,\n        placeholder: \"Picture Choice\",\n        onChange: e => setPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 47\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Form, \"jjbXzLAUxLfVyd+n0HiYpTv1AV0=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/form.js"],"names":["React","Component","useState","useEffect","initializeApp","getAnalytics","getFirestore","collection","addDoc","getDocs","doc","onSnapshot","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","Form","name","setName","ig","setIg","pic","setPic","message","setMessage","unsub","console","log","data","responses","handleSubmit","e","preventDefault","elementsArray","target","elements","formData","reduce","accumulator","currentValue","id","value","docRef","setDoc","push","error","querySnapshot","forEach","res","fetch","method","body","JSON","stringify","resJson","json","status","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\"; \n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA6LdJh0KDusKId6RiuzCY0wBtPcke1nyo\",\n    authDomain: \"gametheory-1f44e.firebaseapp.com\",\n    projectId: \"gametheory-1f44e\",\n    storageBucket: \"gametheory-1f44e.appspot.com\",\n    messagingSenderId: \"660278970969\",\n    appId: \"1:660278970969:web:b49cd16f2140e53018ff48\",\n    measurementId: \"G-Y68GG5ZMVV\"\n  };\n\n  const app = initializeApp(firebaseConfig);\n  // const analytics = getAnalytics(init);\n  const db = getFirestore(app);\n  // console.log(firestoreDB);\n\nfunction Form() {\n    const [name, setName] = useState(\"\");\n    const [ig, setIg] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    useEffect(() => {\n      // Update the document title using the browser API\n      const unsub = onSnapshot(doc(db, \"Response\", \"SF\"), (doc) => {\n        console.log(\"Current data: \", doc.data());    \n      });\n    });\n\n    let responses = [];\n    let handleSubmit = async (e) => {\n      e.preventDefault();\n      const elementsArray = [...e.target.elements];\n      console.log(elementsArray);\n\n      const formData = elementsArray.reduce((accumulator, currentValue) => {\n          if(currentValue.id){\n              accumulator[currentValue.id] = currentValue.value;\n          }\n          return accumulator;\n      },{});\n\n      console.log({ formData });\n\n      try {\n        const docRef = await setDoc(collection(db, \"Response\"), {\n          name: name,\n          ig: ig,\n          pic: pic\n        });\n        responses.push(docRef.id);\n        console.log(\"Document written with ID: \", docRef.id);\n        console.log(\"Info submitted so far: \", responses);\n\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n\n    const querySnapshot = await getDocs(collection(db, \"Response\"));\n    querySnapshot.forEach((doc) => {\n    console.log(`${doc.id} => ${doc.data()}`);\n    });\n\n     try {\n        let res = await fetch(\"https://httpbin.org/post\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            name: name,\n            ig: ig,\n            pic: pic,\n          }),\n        });\n        let resJson = await res.json();\n        if (res.status === 200) {\n          setName(\"\");\n          setIg(\"\");\n          setPic(\"\");\n          setMessage(\"User created successfully\");\n        } else {\n          setMessage(\"Some error occured\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  \n    return (\n      <div className=\"App\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={name} id='name'\n            placeholder=\"Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <input\n            type=\"text\" id='ig'\n            value={ig}\n            placeholder=\"Instagram\"\n            onChange={(e) => setIg(e.target.value)}\n          />\n          <input\n            type=\"text\" id=\"pic\"\n            value={pic}\n            placeholder=\"Picture Choice\"\n            onChange={(e) => setPic(e.target.value)}\n          />\n  \n          <button type=\"submit\">Create</button>\n  \n          <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n        </form>\n      </div>\n    );\n  }\n  \n  export default Form;"]},"metadata":{},"sourceType":"module"}