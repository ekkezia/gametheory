{"ast":null,"code":"import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nlet allSubs = [];\nlet orderedPics = [];\nlet orderedNames = [];\nconst allSubmissions = [];\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png'];\n\nconst getSubmission = async () => {\n  // Get all documents in a collection\n  const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n  querySnapshot.forEach(doc => {\n    // console.log('Submitter Name:', doc.data().name);\n    allSubs.push(doc.data());\n  });\n  let largest = allSubs[0].no;\n\n  for (let i = 1; i < allSubs.length; i++) {\n    if (allSubs[i].no > largest) {\n      orderedNames.push(allSubs[largest - 1].name);\n      orderedPics.push(parseInt(allSubs[largest - 1].pic));\n      largest = allSubs[i].no;\n    }\n  }\n\n  for (let i = 0; i < orderedPics.length; i++) {\n    allSubmissions.push({\n      key: i + 1,\n      name: orderedNames[i],\n      picture: picsOptions[orderedPics[i]]\n    });\n  }\n\n  console.log(' Submission Pics', allSubmissions);\n};\n\ngetSubmission();\nexport default allSubmissions;","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/utils/allSubmission.js"],"names":["React","Component","useState","useEffect","useRef","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","allSubs","orderedPics","orderedNames","allSubmissions","picsOptions","getSubmission","querySnapshot","forEach","push","data","largest","no","i","length","name","parseInt","pic","key","picture","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,GAA9C,EAAmDC,UAAnD,QAAqE,oBAArE;AAGA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,MAAMC,cAAc,GAAG,EAAvB;AAEA,MAAMC,WAAW,GAAG,CAAC,+BAAD,EAAkC,+BAAlC,EAAmE,+BAAnE,EAAoG,+BAApG,CAApB;;AAGA,MAAMC,aAAa,GAAG,YAAY;AAChC;AACA,QAAMC,aAAa,GAAG,MAAMT,OAAO,CAACH,UAAU,CAACD,EAAD,EAAK,cAAL,CAAX,CAAnC;AACAa,EAAAA,aAAa,CAACC,OAAd,CAAuBT,GAAD,IAAS;AAC7B;AACAE,IAAAA,OAAO,CAACQ,IAAR,CAAaV,GAAG,CAACW,IAAJ,EAAb;AACD,GAHD;AAKA,MAAIC,OAAO,GAAGV,OAAO,CAAC,CAAD,CAAP,CAAWW,EAAzB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,OAAO,CAACa,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIZ,OAAO,CAACY,CAAD,CAAP,CAAWD,EAAX,GAAgBD,OAApB,EAA6B;AAC3BR,MAAAA,YAAY,CAACM,IAAb,CAAkBR,OAAO,CAACU,OAAO,GAAG,CAAX,CAAP,CAAqBI,IAAvC;AACAb,MAAAA,WAAW,CAACO,IAAZ,CAAiBO,QAAQ,CAACf,OAAO,CAACU,OAAO,GAAG,CAAX,CAAP,CAAqBM,GAAtB,CAAzB;AAEAN,MAAAA,OAAO,GAAGV,OAAO,CAACY,CAAD,CAAP,CAAWD,EAArB;AACD;AACF;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,WAAW,CAACY,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CT,IAAAA,cAAc,CAACK,IAAf,CAAoB;AAAES,MAAAA,GAAG,EAAEL,CAAC,GAAG,CAAX;AAAcE,MAAAA,IAAI,EAAEZ,YAAY,CAACU,CAAD,CAAhC;AAAqCM,MAAAA,OAAO,EAAEd,WAAW,CAACH,WAAW,CAACW,CAAD,CAAZ;AAAzD,KAApB;AACD;;AAEDO,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCjB,cAAhC;AACD,CAvBD;;AAyBAE,aAAa;AAGb,eAAeF,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\n\nlet allSubs = [];\nlet orderedPics = [];\nlet orderedNames = [];\nconst allSubmissions = [];\n\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n\n\nconst getSubmission = async () => {\n  // Get all documents in a collection\n  const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n  querySnapshot.forEach((doc) => {\n    // console.log('Submitter Name:', doc.data().name);\n    allSubs.push(doc.data());\n  });\n\n  let largest = allSubs[0].no;\n  for (let i = 1; i < allSubs.length; i++) {\n    if (allSubs[i].no > largest) {\n      orderedNames.push(allSubs[largest - 1].name);\n      orderedPics.push(parseInt(allSubs[largest - 1].pic));\n\n      largest = allSubs[i].no;\n    }\n  }\n\n  for (let i = 0; i < orderedPics.length; i++) {\n    allSubmissions.push({ key: i + 1, name: orderedNames[i], picture: picsOptions[orderedPics[i]] })\n  }\n  \n  console.log(' Submission Pics', allSubmissions);\n};\n\ngetSubmission();\n\n\nexport default allSubmissions;"]},"metadata":{},"sourceType":"module"}