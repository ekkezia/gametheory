{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA6LdJh0KDusKId6RiuzCY0wBtPcke1nyo\",\n  authDomain: \"gametheory-1f44e.firebaseapp.com\",\n  projectId: \"gametheory-1f44e\",\n  storageBucket: \"gametheory-1f44e.appspot.com\",\n  messagingSenderId: \"660278970969\",\n  appId: \"1:660278970969:web:b49cd16f2140e53018ff48\",\n  measurementId: \"G-Y68GG5ZMVV\"\n};\nconst app = initializeApp(firebaseConfig); // const analytics = getAnalytics(init);\n\nconst db = getFirestore(app); // console.log(firestoreDB);\n\nfunction Form() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [ig, setIg] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let [currentData, setCurrentData] = useState({\n    name: \"\",\n    ig: \"\",\n    pic: \"\"\n  });\n  let [regName, setRegName] = useState(\"\");\n  useEffect(() => {\n    const unsub = onSnapshot(doc(db, \"Response\", \"rGKZUj2fF5JpWiYZmCDJ\"), doc => {\n      console.log(\"Current data: \", doc.data());\n      setCurrentData = doc.data();\n      console.log('name', currentData.name);\n    });\n  });\n  useEffect(() => {\n    getSubmission();\n  }, []);\n\n  const getSubmission = async () => {\n    let allSubs = []; // Get all documents in a collection\n\n    const querySnapshot = await getDocs(collection(db, \"Response\"));\n    querySnapshot.forEach(doc => {\n      console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n    });\n    console.log('All Submission', allSubs);\n    setRegName(allSubs[0].name);\n  };\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n    const elementsArray = [...e.target.elements];\n    console.log(elementsArray);\n\n    try {\n      const docRef = await setDoc(collection(db, \"Response\"), {\n        name: name,\n        ig: ig,\n        pic: pic\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          ig: ig,\n          pic: pic\n        })\n      });\n      let resJson = await res.json();\n\n      if (res.status === 200) {\n        setName(name);\n        setIg(ig);\n        setPic(pic);\n        setMessage(\"User created successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        id: \"name\",\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"ig\",\n        value: ig,\n        placeholder: \"Instagram\",\n        onChange: e => setIg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"pic\",\n        value: pic,\n        placeholder: \"Picture Choice\",\n        onChange: e => setPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 47\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Data: \", currentData.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Form, \"7Q8vVAUBYey7a5iObDk+JSs7Vac=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/form.js"],"names":["React","Component","useState","useEffect","initializeApp","getAnalytics","getFirestore","collection","addDoc","setDoc","getDocs","doc","onSnapshot","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","Form","name","setName","ig","setIg","pic","setPic","message","setMessage","currentData","setCurrentData","regName","setRegName","unsub","console","log","data","getSubmission","allSubs","querySnapshot","forEach","push","handleSubmit","e","preventDefault","elementsArray","target","elements","docRef","id","error","res","fetch","method","body","JSON","stringify","resJson","json","status","err","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\"; \n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA6LdJh0KDusKId6RiuzCY0wBtPcke1nyo\",\n    authDomain: \"gametheory-1f44e.firebaseapp.com\",\n    projectId: \"gametheory-1f44e\",\n    storageBucket: \"gametheory-1f44e.appspot.com\",\n    messagingSenderId: \"660278970969\",\n    appId: \"1:660278970969:web:b49cd16f2140e53018ff48\",\n    measurementId: \"G-Y68GG5ZMVV\"\n  };\n\n  const app = initializeApp(firebaseConfig);\n  // const analytics = getAnalytics(init);\n  const db = getFirestore(app);\n  // console.log(firestoreDB);\n\nfunction Form() {\n    const [name, setName] = useState(\"\");\n    const [ig, setIg] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    let [currentData, setCurrentData] = useState({ name: \"\", ig: \"\", pic: \"\"});\n    let [regName, setRegName] = useState(\"\");\n\n\n    useEffect(() => {\n      const unsub = onSnapshot(doc(db, \"Response\", \"rGKZUj2fF5JpWiYZmCDJ\"), (doc) => {\n        console.log(\"Current data: \", doc.data());  \n        setCurrentData = doc.data();  \n        console.log('name', currentData.name);\n      });\n    });\n\n    useEffect(() => {\n      getSubmission();\n    }, [])\n\n    const getSubmission = async() => {\n      let allSubs = [];\n      // Get all documents in a collection\n      const querySnapshot = await getDocs(collection(db, \"Response\"));\n      querySnapshot.forEach((doc) => {\n      console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n      });\n      console.log('All Submission', allSubs);\n      setRegName(allSubs[0].name);\n    };\n\n    let handleSubmit = async (e) => {\n      e.preventDefault();\n      const elementsArray = [...e.target.elements];\n      console.log(elementsArray);\n\n      try {\n        const docRef = await setDoc(collection(db, \"Response\"), {\n          name: name,\n          ig: ig,\n          pic: pic\n        });\n        console.log(\"Document written with ID: \", docRef.id);\n\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n\n    \n    \n     try {\n        let res = await fetch(\"https://httpbin.org/post\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            name: name,\n            ig: ig,\n            pic: pic,\n          }),\n        });\n        let resJson = await res.json();\n        if (res.status === 200) {\n          setName(name);\n          setIg(ig);\n          setPic(pic);\n          setMessage(\"User created successfully\");\n        } else {\n          setMessage(\"Some error occured\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  \n    return (\n      <div className=\"App\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={name} id='name'\n            placeholder=\"Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <input\n            type=\"text\" id='ig'\n            value={ig}\n            placeholder=\"Instagram\"\n            onChange={(e) => setIg(e.target.value)}\n          />\n          <input\n            type=\"text\" id=\"pic\"\n            value={pic}\n            placeholder=\"Picture Choice\"\n            onChange={(e) => setPic(e.target.value)}\n          />\n  \n          <button type=\"submit\">Create</button>\n\n          <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n          <div><p>Current Data: {currentData.name}</p></div>\n        </form>\n      </div>\n    );\n  }\n  \n  export default Form;"]},"metadata":{},"sourceType":"module"}