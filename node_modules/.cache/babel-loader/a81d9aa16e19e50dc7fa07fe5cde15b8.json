{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { pics } from './Pics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imgArray = [];\n\nfor (let i = 0; i < 10; i++) {\n  imgArray.push('./assets/' + i + '.jpg');\n}\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA6LdJh0KDusKId6RiuzCY0wBtPcke1nyo\",\n  authDomain: \"gametheory-1f44e.firebaseapp.com\",\n  projectId: \"gametheory-1f44e\",\n  storageBucket: \"gametheory-1f44e.appspot.com\",\n  messagingSenderId: \"660278970969\",\n  appId: \"1:660278970969:web:b49cd16f2140e53018ff48\",\n  measurementId: \"G-Y68GG5ZMVV\"\n};\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\n\nfunction Form() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [ig, setIg] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let [currentData, setCurrentData] = useState({\n    name: \"\",\n    ig: \"\",\n    pic: \"\"\n  });\n  let [regName, setRegName] = useState(\"\");\n  let [regIg, setRegIg] = useState(\"\");\n  let [regPic, setRegPic] = useState(0);\n  let [subs, setSubs] = useState([]);\n  let allSubs = [];\n  useEffect(() => {\n    // CURRENT DATA\n    const unsub = onSnapshot(doc(db, \"Response\", \"rGKZUj2fF5JpWiYZmCDJ\"), doc => {\n      console.log(\"Current data: \", doc.data());\n      setCurrentData = doc.data();\n      console.log('name', currentData.name);\n    });\n  });\n  useEffect(() => {\n    console.log('pic', pics[0]);\n    getSubmission();\n  }, []);\n\n  const getSubmission = async () => {\n    // Get all documents in a collection\n    const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n    querySnapshot.forEach(doc => {\n      // console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n    });\n    setSubs(allSubs);\n    let largest = allSubs[0].no;\n\n    for (let i = 2; i < allSubs.length; i++) {\n      if (allSubs[i].no > largest) {\n        largest = allSubs[i].no;\n      }\n    }\n\n    console.log('All Submission', allSubs[largest - 1].no);\n    setRegName(allSubs[largest - 1].name);\n    setRegIg(allSubs[largest - 1].ig);\n    setRegPic(allSubs[largest - 1].pic); // console.log('reg name', regName.toString());\n    // setRegName(allSubs[allSubs.length - 1].name);\n    // setRegIg(allSubs[0].ig);\n    // setRegPic(allSubs[0].pic);\n  }; //   const currSnapshot = onSnapshot(doc(db, \"currResponse\", \"currUser\"), (doc) => {\n  //     setRegName(doc.data().name);\n  //     setRegIg(doc.data().ig);\n  //     setRegPic(doc.data().pic);\n  // });\n\n\n  function answerPic(e) {\n    if (e.target.id == \"answer1\") {\n      setPic(\"1\");\n      document.getElementById('answer1button').style.backgroundColor = \"black\";\n      document.getElementById('answer2button').style.backgroundColor = \"white\";\n    } else if (e.target.id == \"answer2\") {\n      setPic(\"2\");\n      document.getElementById('answer2button').style.backgroundColor = \"black\";\n      document.getElementById('answer1button').style.backgroundColor = \"white\";\n    }\n\n    console.log('answer', e.target.id);\n  }\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n    const elementsArray = [...e.target.elements];\n    console.log(elementsArray);\n\n    try {\n      let number = 1;\n      let largest = subs[0].no;\n\n      for (let i = 0; i < subs.length; i++) {\n        if (subs[i].no > largest) {\n          largest = subs[i].no;\n        }\n      }\n\n      let nextNum = largest + 1;\n      console.log('All Submission', largest); // const docRef = await addDoc(collection(db, \"Response\"), {\n      //   no: number,\n      //   name: name,\n      //   ig: ig,\n      //   pic: pic\n      // });\n\n      const data = {\n        no: nextNum,\n        name: name,\n        ig: ig,\n        pic: pic\n      };\n      const currRef = await setDoc(doc(db, \"currResponse\", data.no.toString()), data);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          ig: ig,\n          pic: pic\n        })\n      });\n      let resJson = await res.json();\n\n      if (res.status === 200) {\n        setMessage(\"You responded.\"); // window.location.reload(false);\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        id: \"col1\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            id: \"name\",\n            placeholder: \"Name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"ig\",\n            value: ig,\n            placeholder: \"Instagram\",\n            onChange: e => setIg(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 47\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current Name: \", regName.toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current IG: \", regIg.toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current Pic: \", regPic.toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Result Pic: \", parseInt(regPic) + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pics[0],\n              width: \"100px\",\n              height: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Choice of Answers:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"answer1button\",\n            onClick: answerPic,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"answer1\",\n              src: \"https://imgur.com/b0ZYobY.png\",\n              width: \"100px\",\n              height: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"answer2button\",\n            onClick: answerPic,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"answer2\",\n              src: \"https://imgur.com/ONukpTh.png\",\n              width: \"100px\",\n              height: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Choosing Answer \", pic]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        id: \"col2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Form, \"TAvmrIdfv84NqlPhivyotkdzYY4=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/form.js"],"names":["React","Component","useState","useEffect","initializeApp","getAnalytics","getFirestore","collection","addDoc","setDoc","getDocs","doc","onSnapshot","pics","imgArray","i","push","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","db","Form","name","setName","ig","setIg","pic","setPic","message","setMessage","currentData","setCurrentData","regName","setRegName","regIg","setRegIg","regPic","setRegPic","subs","setSubs","allSubs","unsub","console","log","data","getSubmission","querySnapshot","forEach","largest","no","length","answerPic","e","target","id","document","getElementById","style","backgroundColor","handleSubmit","preventDefault","elementsArray","elements","number","nextNum","currRef","toString","error","res","fetch","method","body","JSON","stringify","resJson","json","status","err","value","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\"; \n\nimport { pics } from './Pics';\n\nconst imgArray = [];\nfor (let i = 0; i < 10; i++) {\n      imgArray.push('./assets/'+ i + '.jpg');\n}  \n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA6LdJh0KDusKId6RiuzCY0wBtPcke1nyo\",\n    authDomain: \"gametheory-1f44e.firebaseapp.com\",\n    projectId: \"gametheory-1f44e\",\n    storageBucket: \"gametheory-1f44e.appspot.com\",\n    messagingSenderId: \"660278970969\",\n    appId: \"1:660278970969:web:b49cd16f2140e53018ff48\",\n    measurementId: \"G-Y68GG5ZMVV\"\n  };\n\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n  const db = getFirestore(app);\n\nfunction Form() {\n    const [name, setName] = useState(\"\");\n    const [ig, setIg] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    let [currentData, setCurrentData] = useState({ name: \"\", ig: \"\", pic: \"\"});\n    let [regName, setRegName] = useState(\"\");\n    let [regIg, setRegIg] = useState(\"\");\n    let [regPic, setRegPic] = useState(0);\n    let [subs, setSubs] = useState([]);\n    let allSubs = [];\n\n    useEffect(() => {\n      // CURRENT DATA\n      const unsub = onSnapshot(doc(db, \"Response\", \"rGKZUj2fF5JpWiYZmCDJ\"), (doc) => {\n        console.log(\"Current data: \", doc.data());  \n        setCurrentData = doc.data();  \n        console.log('name', currentData.name);\n      });\n    });\n\n    useEffect(() => {\n      console.log('pic', pics[0]);\n      getSubmission();\n    }, []);\n\n    const getSubmission = async() => {\n      // Get all documents in a collection\n      const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n      querySnapshot.forEach((doc) => {\n      // console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n      });\n      setSubs(allSubs);\n\n      let largest = allSubs[0].no;\n      for(let i = 2; i < allSubs.length; i++){\n        if(allSubs[i].no > largest){\n          largest = allSubs[i].no;\n        }\n      }\n      console.log('All Submission', allSubs[largest - 1].no);\n\n      setRegName(allSubs[largest - 1].name);\n      setRegIg(allSubs[largest - 1].ig);\n      setRegPic(allSubs[largest - 1].pic);\n      // console.log('reg name', regName.toString());\n      // setRegName(allSubs[allSubs.length - 1].name);\n      // setRegIg(allSubs[0].ig);\n      // setRegPic(allSubs[0].pic);\n    };\n\n  //   const currSnapshot = onSnapshot(doc(db, \"currResponse\", \"currUser\"), (doc) => {\n  //     setRegName(doc.data().name);\n  //     setRegIg(doc.data().ig);\n  //     setRegPic(doc.data().pic);\n  // });\n    function answerPic(e) {\n      if(e.target.id == \"answer1\"){\n        setPic(\"1\");\n        document.getElementById('answer1button').style.backgroundColor = \"black\";\n        document.getElementById('answer2button').style.backgroundColor = \"white\";\n\n      }\n      else if(e.target.id == \"answer2\"){\n        setPic(\"2\");\n        document.getElementById('answer2button').style.backgroundColor = \"black\";\n        document.getElementById('answer1button').style.backgroundColor = \"white\";\n\n      }\n      console.log('answer', e.target.id)\n    }\n\n    let handleSubmit = async (e) => {\n      e.preventDefault();\n      const elementsArray = [...e.target.elements];\n      console.log(elementsArray);\n\n      try {\n        let number = 1;\n        let largest = subs[0].no;\n        for(let i = 0; i < subs.length; i++){\n          if(subs[i].no > largest){\n            largest = subs[i].no;\n          }\n        }\n        let nextNum = largest + 1;\n        console.log('All Submission', largest);\n        // const docRef = await addDoc(collection(db, \"Response\"), {\n        //   no: number,\n        //   name: name,\n        //   ig: ig,\n        //   pic: pic\n        // });\n\n\n        const data = {\n          no: nextNum,\n          name: name,\n          ig: ig,\n          pic: pic\n        }\n\n\n        const currRef = await setDoc(doc(db, \"currResponse\", data.no.toString()), data);\n\n\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n\n    \n    \n     try {\n        let res = await fetch(\"https://httpbin.org/post\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            name: name,\n            ig: ig,\n            pic: pic,\n          }),\n        });\n        let resJson = await res.json();\n        if (res.status === 200) {\n          \n          setMessage(\"You responded.\");\n          // window.location.reload(false);\n\n        } else {\n          setMessage(\"Some error occured\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  \n    return (\n      <div className=\"App\">\n        \n        <div class=\"row\">\n            <div class=\"column\" id=\"col1\">\n\n              <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={name} id='name'\n            placeholder=\"Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <input\n            type=\"text\" id='ig'\n            value={ig}\n            placeholder=\"Instagram\"\n            onChange={(e) => setIg(e.target.value)}\n          />\n\n  \n          <button type=\"submit\">Create</button>\n\n          <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n          <div><p>Current Name: {regName.toString()}</p></div>\n          <div><p>Current IG: {regIg.toString()}</p></div>\n          <div><p>Current Pic: {regPic.toString()}</p></div>\n          <div><p>Result Pic: {parseInt(regPic) + 1}</p></div>\n          <div><img src={pics[0]} width='100px' height='100px' /></div>\n          <div>Choice of Answers:</div>\n          <button id=\"answer1button\" onClick={answerPic}><img id=\"answer1\" src=\"https://imgur.com/b0ZYobY.png\" width='100px' height='100px' /></button>\n          <button id=\"answer2button\" onClick={answerPic}><img id=\"answer2\" src=\"https://imgur.com/ONukpTh.png\" width='100px' height='100px' /></button>\n          <div><p>Choosing Answer {pic}</p></div>\n\n        </form></div>\n            <div class=\"column\" id=\"col2\"></div>\n          </div> \n      </div>\n    );\n  }\n  \n  export default Form;"]},"metadata":{},"sourceType":"module"}