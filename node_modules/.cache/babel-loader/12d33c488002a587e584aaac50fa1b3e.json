{"ast":null,"code":"import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nlet allSubs = [];\nlet orderedPics = [];\nlet orderedNames = [];\nlet myData = [];\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png'];\nconst getSubmission = getDocs(collection(db, \"currResponse\")).then(response => {\n  console.log('response', response);\n  response.forEach(doc => {\n    console.log('Submitter Name:', doc.data().name);\n    allSubs.push(doc.data());\n    let largest = allSubs[0].no;\n\n    for (let i = 1; i < allSubs.length; i++) {\n      if (allSubs[i].no > largest) {\n        orderedNames.push(allSubs[largest - 1].name);\n        orderedPics.push(parseInt(allSubs[largest - 1].pic));\n        largest = allSubs[i].no;\n      }\n    }\n\n    for (let i = 0; i < orderedPics.length; i++) {\n      myData.push({\n        key: i + 1,\n        name: orderedNames[i],\n        picture: picsOptions[orderedPics[i]]\n      });\n      console.log('my data', allSubs.length);\n    }\n  });\n  return myData;\n});\nexport const allSubsInfo = myData;","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/utils/allSubmission.js"],"names":["React","Component","useState","useEffect","useRef","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","allSubs","orderedPics","orderedNames","myData","picsOptions","getSubmission","then","response","console","log","forEach","data","name","push","largest","no","i","length","parseInt","pic","key","picture","allSubsInfo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,GAA9C,EAAmDC,UAAnD,QAAqE,oBAArE;AAGA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,MAAM,GAAG,EAAb;AAEA,MAAMC,WAAW,GAAG,CAAC,+BAAD,EAAkC,+BAAlC,EAAmE,+BAAnE,EAAoG,+BAApG,CAApB;AAIA,MAAMC,aAAa,GAAGR,OAAO,CAACH,UAAU,CAACD,EAAD,EAAK,cAAL,CAAX,CAAP,CACrBa,IADqB,CAChBC,QAAQ,IAAI;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACIA,EAAAA,QAAQ,CAACG,OAAT,CAAkBZ,GAAD,IAAS;AAC1BU,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BX,GAAG,CAACa,IAAJ,GAAWC,IAA1C;AACAZ,IAAAA,OAAO,CAACa,IAAR,CAAaf,GAAG,CAACa,IAAJ,EAAb;AAEF,QAAIG,OAAO,GAAGd,OAAO,CAAC,CAAD,CAAP,CAAWe,EAAzB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,OAAO,CAACiB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIhB,OAAO,CAACgB,CAAD,CAAP,CAAWD,EAAX,GAAgBD,OAApB,EAA6B;AAC3BZ,QAAAA,YAAY,CAACW,IAAb,CAAkBb,OAAO,CAACc,OAAO,GAAG,CAAX,CAAP,CAAqBF,IAAvC;AACAX,QAAAA,WAAW,CAACY,IAAZ,CAAiBK,QAAQ,CAAClB,OAAO,CAACc,OAAO,GAAG,CAAX,CAAP,CAAqBK,GAAtB,CAAzB;AAEAL,QAAAA,OAAO,GAAGd,OAAO,CAACgB,CAAD,CAAP,CAAWD,EAArB;AACD;AACF;;AAED,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,WAAW,CAACgB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3Cb,MAAAA,MAAM,CAACU,IAAP,CAAY;AAAEO,QAAAA,GAAG,EAAEJ,CAAC,GAAG,CAAX;AAAcJ,QAAAA,IAAI,EAAEV,YAAY,CAACc,CAAD,CAAhC;AAAqCK,QAAAA,OAAO,EAAEjB,WAAW,CAACH,WAAW,CAACe,CAAD,CAAZ;AAAzD,OAAZ;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,OAAO,CAACiB,MAA/B;AACD;AACA,GAlBC;AAmBJ,SAAOd,MAAP;AACD,CAvBqB,CAAtB;AA0BA,OAAO,MAAMmB,WAAW,GAAGnB,MAApB","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\n\nlet allSubs = [];\nlet orderedPics = [];\nlet orderedNames = [];\nlet myData = [];\n\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n\n\n\nconst getSubmission = getDocs(collection(db, \"currResponse\"))\n.then(response => {\n  console.log('response', response);\n      response.forEach((doc) => {\n      console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n\n    let largest = allSubs[0].no;\n    for (let i = 1; i < allSubs.length; i++) {\n      if (allSubs[i].no > largest) {\n        orderedNames.push(allSubs[largest - 1].name);\n        orderedPics.push(parseInt(allSubs[largest - 1].pic));\n  \n        largest = allSubs[i].no;\n      }\n    }\n  \n    for (let i = 0; i < orderedPics.length; i++) {\n      myData.push({ key: i + 1, name: orderedNames[i], picture: picsOptions[orderedPics[i]] })\n      console.log('my data', allSubs.length);\n    }\n    });\n  return myData;\n});\n\n\nexport const allSubsInfo = myData;"]},"metadata":{},"sourceType":"module"}