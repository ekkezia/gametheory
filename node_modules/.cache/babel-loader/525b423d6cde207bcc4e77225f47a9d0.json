{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { pics } from './Pics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imgArray = [];\n\nfor (let i = 0; i < 10; i++) {\n  imgArray.push('./assets/' + i + '.jpg');\n}\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA6LdJh0KDusKId6RiuzCY0wBtPcke1nyo\",\n  authDomain: \"gametheory-1f44e.firebaseapp.com\",\n  projectId: \"gametheory-1f44e\",\n  storageBucket: \"gametheory-1f44e.appspot.com\",\n  messagingSenderId: \"660278970969\",\n  appId: \"1:660278970969:web:b49cd16f2140e53018ff48\",\n  measurementId: \"G-Y68GG5ZMVV\"\n};\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\n\nfunction Form() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [ig, setIg] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let [currentData, setCurrentData] = useState({\n    name: \"\",\n    ig: \"\",\n    pic: \"\"\n  });\n  let [regName, setRegName] = useState(\"\");\n  let [regIg, setRegIg] = useState(\"\");\n  let [regPic, setRegPic] = useState(0);\n  let [subs, setSubs] = useState([]);\n  let allSubs = [];\n  useEffect(() => {\n    // CURRENT DATA\n    const unsub = onSnapshot(doc(db, \"Response\", \"rGKZUj2fF5JpWiYZmCDJ\"), doc => {\n      console.log(\"Current data: \", doc.data());\n      setCurrentData = doc.data();\n      console.log('name', currentData.name);\n    });\n  });\n  useEffect(() => {\n    console.log('pic', pics[0]);\n    getSubmission();\n  }, []);\n\n  const getSubmission = async () => {\n    // Get all documents in a collection\n    const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n    querySnapshot.forEach(doc => {\n      // console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n    });\n    setSubs(allSubs);\n    let largest = parseInt(allSubs[0].no);\n\n    for (let i = 0; i < subs.length; i++) {\n      if (parseInt(allSubs[i].no) > largest) {\n        largest = parseInt(allSubs[i].no);\n      }\n    }\n\n    let nextNum = largest + 1;\n    console.log('next', nextNum);\n    console.log('All Submission', allSubs[0].no); // setRegName(subs[largest - 1].name);\n    // setRegIg(subs[largest - 1].ig);\n    // setRegPic(subs[largest - 1].pic);\n    // console.log('reg name', regName.toString());\n    // setRegName(allSubs[allSubs.length - 1].name);\n    // setRegIg(allSubs[0].ig);\n    // setRegPic(allSubs[0].pic);\n  }; //   const currSnapshot = onSnapshot(doc(db, \"currResponse\", \"currUser\"), (doc) => {\n  //     setRegName(doc.data().name);\n  //     setRegIg(doc.data().ig);\n  //     setRegPic(doc.data().pic);\n  // });\n\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n    const elementsArray = [...e.target.elements];\n    console.log(elementsArray);\n\n    try {\n      let number = 1;\n      let largest = parseInt(allSubs[0].no);\n\n      for (let i = 0; i < subs.length; i++) {\n        if (parseInt(allSubs[i].no) > largest) {\n          largest = parseInt(allSubs[i].no);\n        }\n      }\n\n      let nextNum = largest + 1;\n      console.log('nextNum', nextNum); // const docRef = await addDoc(collection(db, \"Response\"), {\n      //   no: number,\n      //   name: name,\n      //   ig: ig,\n      //   pic: pic\n      // });\n\n      const data = {\n        no: nextNum.toString(),\n        name: name,\n        ig: ig,\n        pic: pic\n      };\n      const currRef = await setDoc(doc(db, \"currResponse\", data.no), data);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          ig: ig,\n          pic: pic\n        })\n      });\n      let resJson = await res.json();\n\n      if (res.status === 200) {\n        setMessage(\"You responded.\"); // window.location.reload(false);\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        id: \"name\",\n        placeholder: \"Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"ig\",\n        value: ig,\n        placeholder: \"Instagram\",\n        onChange: e => setIg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"pic\",\n        value: pic,\n        placeholder: \"Picture Choice\",\n        onChange: e => setPic(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 47\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Name: \", regName.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current IG: \", regIg.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Pic: \", regPic.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Result Pic: \", parseInt(regPic) + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pics[0],\n          width: \"100px\",\n          height: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Form, \"TAvmrIdfv84NqlPhivyotkdzYY4=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/form.js"],"names":["React","Component","useState","useEffect","initializeApp","getAnalytics","getFirestore","collection","addDoc","setDoc","getDocs","doc","onSnapshot","pics","imgArray","i","push","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","db","Form","name","setName","ig","setIg","pic","setPic","message","setMessage","currentData","setCurrentData","regName","setRegName","regIg","setRegIg","regPic","setRegPic","subs","setSubs","allSubs","unsub","console","log","data","getSubmission","querySnapshot","forEach","largest","parseInt","no","length","nextNum","handleSubmit","e","preventDefault","elementsArray","target","elements","number","toString","currRef","error","res","fetch","method","body","JSON","stringify","resJson","json","status","err","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\"; \n\nimport { pics } from './Pics';\n\nconst imgArray = [];\nfor (let i = 0; i < 10; i++) {\n      imgArray.push('./assets/'+ i + '.jpg');\n}  \n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA6LdJh0KDusKId6RiuzCY0wBtPcke1nyo\",\n    authDomain: \"gametheory-1f44e.firebaseapp.com\",\n    projectId: \"gametheory-1f44e\",\n    storageBucket: \"gametheory-1f44e.appspot.com\",\n    messagingSenderId: \"660278970969\",\n    appId: \"1:660278970969:web:b49cd16f2140e53018ff48\",\n    measurementId: \"G-Y68GG5ZMVV\"\n  };\n\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n  const db = getFirestore(app);\n\nfunction Form() {\n    const [name, setName] = useState(\"\");\n    const [ig, setIg] = useState(\"\");\n    const [pic, setPic] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    let [currentData, setCurrentData] = useState({ name: \"\", ig: \"\", pic: \"\"});\n    let [regName, setRegName] = useState(\"\");\n    let [regIg, setRegIg] = useState(\"\");\n    let [regPic, setRegPic] = useState(0);\n    let [subs, setSubs] = useState([]);\n    let allSubs = [];\n\n    useEffect(() => {\n      // CURRENT DATA\n      const unsub = onSnapshot(doc(db, \"Response\", \"rGKZUj2fF5JpWiYZmCDJ\"), (doc) => {\n        console.log(\"Current data: \", doc.data());  \n        setCurrentData = doc.data();  \n        console.log('name', currentData.name);\n      });\n    });\n\n    useEffect(() => {\n      console.log('pic', pics[0]);\n      getSubmission();\n    }, []);\n\n    const getSubmission = async() => {\n      // Get all documents in a collection\n      const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n      querySnapshot.forEach((doc) => {\n      // console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n      });\n      setSubs(allSubs);\n\n      let largest = parseInt(allSubs[0].no);\n      for(let i = 0; i < subs.length; i++){\n        if(parseInt(allSubs[i].no) > largest){\n          largest = parseInt(allSubs[i].no);\n        }\n      }\n      let nextNum = largest + 1;\n      console.log('next', nextNum);\n      console.log('All Submission', allSubs[0].no);\n\n      // setRegName(subs[largest - 1].name);\n      // setRegIg(subs[largest - 1].ig);\n      // setRegPic(subs[largest - 1].pic);\n      // console.log('reg name', regName.toString());\n      // setRegName(allSubs[allSubs.length - 1].name);\n      // setRegIg(allSubs[0].ig);\n      // setRegPic(allSubs[0].pic);\n    };\n\n  //   const currSnapshot = onSnapshot(doc(db, \"currResponse\", \"currUser\"), (doc) => {\n  //     setRegName(doc.data().name);\n  //     setRegIg(doc.data().ig);\n  //     setRegPic(doc.data().pic);\n  // });\n\n    let handleSubmit = async (e) => {\n      e.preventDefault();\n      const elementsArray = [...e.target.elements];\n      console.log(elementsArray);\n\n      try {\n        let number = 1;\n        let largest = parseInt(allSubs[0].no);\n        for(let i = 0; i < subs.length; i++){\n          if(parseInt(allSubs[i].no) > largest){\n            largest = parseInt(allSubs[i].no);\n          }\n        }\n        let nextNum = largest + 1;\n        console.log('nextNum', nextNum);\n        // const docRef = await addDoc(collection(db, \"Response\"), {\n        //   no: number,\n        //   name: name,\n        //   ig: ig,\n        //   pic: pic\n        // });\n\n\n        const data = {\n          no: nextNum.toString(),\n          name: name,\n          ig: ig,\n          pic: pic\n        }\n\n\n        const currRef = await setDoc(doc(db, \"currResponse\", data.no), data);\n\n\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n\n    \n    \n     try {\n        let res = await fetch(\"https://httpbin.org/post\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            name: name,\n            ig: ig,\n            pic: pic,\n          }),\n        });\n        let resJson = await res.json();\n        if (res.status === 200) {\n          \n          setMessage(\"You responded.\");\n          // window.location.reload(false);\n\n        } else {\n          setMessage(\"Some error occured\");\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  \n    return (\n      <div className=\"App\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={name} id='name'\n            placeholder=\"Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <input\n            type=\"text\" id='ig'\n            value={ig}\n            placeholder=\"Instagram\"\n            onChange={(e) => setIg(e.target.value)}\n          />\n          <input\n            type=\"text\" id=\"pic\"\n            value={pic}\n            placeholder=\"Picture Choice\"\n            onChange={(e) => setPic(e.target.value)}\n          />\n  \n          <button type=\"submit\">Create</button>\n\n          <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n          <div><p>Current Name: {regName.toString()}</p></div>\n          <div><p>Current IG: {regIg.toString()}</p></div>\n          <div><p>Current Pic: {regPic.toString()}</p></div>\n          <div><p>Result Pic: {parseInt(regPic) + 1}</p></div>\n          <div><img src={pics[0]} width='100px' height='100px' /></div>\n\n\n        </form>\n      </div>\n    );\n  }\n  \n  export default Form;"]},"metadata":{},"sourceType":"module"}