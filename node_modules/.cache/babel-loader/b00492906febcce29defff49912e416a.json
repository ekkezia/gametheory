{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { red } from '@material-ui/core/colors';\nimport Draggable from \"react-draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    position: 'absolute',\n    transform: 'translateX(-50%)',\n    top: '-90vh',\n    left: '50%',\n    width: '45vw',\n    height: '100vh',\n    background: 'rgba(0,0,0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '85px',\n    backdropFilter: 'blur(10px)',\n    textAlign: 'center'\n  },\n  hoverChange: {\n    top: '-80vh',\n    transition: 'all 1000ms ease',\n    animation: \"$hover 2s ease infinity\"\n  },\n  content: {\n    position: 'absolute',\n    left: '50%',\n    bottom: 0,\n    textAlign: 'center',\n    transform: 'translate(-50%, 0%)',\n    color: 'white',\n    fontSize: '28px',\n    padding: '4%'\n  },\n  p: {\n    marginBottom: '16px',\n    fontSize: '14px'\n  },\n  \"@keyframes hover\": {\n    \"0%, 100%\": {\n      transform: 'translateY(0px)'\n    },\n    \"50%\": {\n      transform: 'translateY(100px)'\n    }\n  }\n}));\nexport default function Header() {\n  _s();\n\n  const classes = useStyles();\n  const [hoverClass, setHoverClass] = useState(null);\n\n  const handleMouseHover = () => {\n    setHoverClass(true);\n    console.log('hover');\n  };\n\n  useEffect(() => {\n    setHoverClass(hoverClass ? classes.hoverChange : '');\n    console.log('change');\n  }, [hoverClass]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.container} ${hoverClass}`,\n    onMouseEnter: handleMouseHover,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.p,\n        children: \"concept by ekezia + marco1ee.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.p,\n        children: \"player01 is ugh.isha, player02 is parano0dle.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.p,\n        children: \"this is a game where you are invited to play to cooperate or to betray.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: \"game theory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Header, \"jGpNzDGxswZ7ztY35zyUirGGncY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/Header.jsx"],"names":["makeStyles","useState","useEffect","red","Draggable","useStyles","theme","container","position","transform","top","left","width","height","background","display","justifyContent","alignItems","borderRadius","backdropFilter","textAlign","hoverChange","transition","animation","content","bottom","color","fontSize","padding","p","marginBottom","Header","classes","hoverClass","setHoverClass","handleMouseHover","console","log","title"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { red } from '@material-ui/core/colors';\nimport Draggable from \"react-draggable\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'absolute',\n    transform: 'translateX(-50%)',\n    top: '-90vh',\n    left: '50%',\n    width: '45vw',\n    height: '100vh',\n    background: 'rgba(0,0,0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '85px',\n    backdropFilter: 'blur(10px)',\n    textAlign: 'center',\n  },\n  hoverChange: {\n    top: '-80vh',\n    transition: 'all 1000ms ease',\n    animation: \"$hover 2s ease infinity\"\n  },\n  content: {\n    position: 'absolute',\n    left: '50%',\n    bottom: 0,\n    textAlign: 'center',\n    transform: 'translate(-50%, 0%)',\n    color: 'white',\n    fontSize: '28px',\n    padding: '4%'\n  },\n  p: {\n    marginBottom: '16px',\n    fontSize: '14px',\n  },\n  \"@keyframes hover\": {\n    \"0%, 100%\": {\n      transform: 'translateY(0px)'\n    },\n    \"50%\": {\n      transform: 'translateY(100px)'\n    }\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  const [hoverClass, setHoverClass] = useState(null);\n\n  const handleMouseHover = () => {\n    setHoverClass(true);\n    console.log('hover');\n  }\n\n  useEffect(() => {\n    setHoverClass(hoverClass ? classes.hoverChange : '');\n    console.log('change');\n  }, [hoverClass]);\n\n  return (    \n      <div className={`${classes.container} ${hoverClass}`} onMouseEnter={handleMouseHover}>\n        <div className={classes.content}>\n          <div className={classes.p}>\n            concept by ekezia + marco1ee.\n          </div>\n          <div className={classes.p}>\n            player01 is ugh.isha, player02 is parano0dle.\n          </div>\n\n          <div className={classes.p}>\n            this is a game where you are invited to play to cooperate or to betray.\n          </div>\n          <div className={classes.title}>\n            game theory\n          </div>\n        </div>\n      </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}