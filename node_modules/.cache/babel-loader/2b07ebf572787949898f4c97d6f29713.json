{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { makeStyles, withTheme } from '@material-ui/core';\nimport db from './utils/firebase.config';\nimport SubmitContext from './utils/submitContext';\nimport { pics } from './Pics';\nimport serverTimestamp from './utils/serverTimestamp';\nimport { allSubmissions } from './utils/allSubmission';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    color: 'white'\n  },\n  submitBtn: {\n    padding: '1%',\n    background: 'white',\n    transition: 'all 500ms ease'\n  },\n  enableSubmitBtn: {\n    transition: 'all 500ms ease'\n  }\n}));\nconst imgArray = [];\n\nfor (let i = 0; i < 10; i++) {\n  imgArray.push('./assets/' + i + '.jpg');\n}\n\nfunction Form() {\n  _s();\n\n  const classes = useStyles();\n  const clickMenu = useRef(null);\n  const form = useRef(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [toggleBtnEnabler, setToggleBtnEnabler] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let [currentData, setCurrentData] = useState({\n    name: \"\",\n    pic: \"\"\n  });\n  let [regName, setRegName] = useState(\"\");\n  let [regIg, setRegIg] = useState(\"\");\n  let [regPic, setRegPic] = useState(0);\n  let [subs, setSubs] = useState([]);\n  let [ordered, setOrdered] = useState([]);\n  let allSubs = [];\n  let orderedPics = [];\n  const picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png'];\n  useEffect(() => {\n    // CURRENT DATA\n    const unsub = onSnapshot(doc(db, \"Response\", \"rGKZUj2fF5JpWiYZmCDJ\"), doc => {\n      console.log(\"Current data: \", doc.data());\n      setCurrentData = doc.data();\n      console.log('name', currentData.name);\n    });\n  });\n  useEffect(() => {\n    getSubmission(); // console.log('all', allSubmissions);\n    // allSubmissions.then(result => setAthenaVAl(result));\n  }, []);\n  useEffect(() => {\n    console.log('submit change', submitted);\n  }, [submitted]);\n  const myData = [];\n\n  const getSubmission = async () => {\n    // Get all documents in a collection\n    const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n    querySnapshot.forEach(doc => {\n      // console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n    });\n    setSubs(allSubs);\n    let largest = allSubs[0].no;\n\n    for (let i = 1; i < allSubs.length; i++) {\n      if (allSubs[i].no > largest) {\n        orderedPics.push(parseInt(allSubs[largest - 1].pic));\n        largest = allSubs[i].no; // orderedSubs.push(largest);\n      }\n    }\n\n    console.log('All Submission', allSubs[largest - 1].no);\n    console.log('Ordered Submission', orderedPics);\n    setOrdered(orderedPics);\n    setRegName(allSubs[largest - 1].name);\n  };\n\n  for (let i = 0; i < ordered.length; i++) {\n    myData.push({\n      key: i + 1,\n      name: picsOptions[ordered[i]]\n    });\n  }\n\n  console.log(' Submission Pics', myData); // the loop. it'll return array of react node.\n\n  const children = myData.map(val => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: val.name,\n      width: \"50%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" (Your text goes here. Also, you can place other elements within this parent div. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: val.key,\n      children: val.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this)); //   const currSnapshot = onSnapshot(doc(db, \"currResponse\", \"currUser\"), (doc) => {\n  //     setRegName(doc.data().name);\n  //     setRegIg(doc.data().ig);\n  //     setRegPic(doc.data().pic);\n  // });\n\n  function answerPic(e) {\n    if (e.target.id == \"answer1\") {\n      setPic(\"1\");\n      document.getElementById('answer1button').style.backgroundColor = \"black\";\n      document.getElementById('answer2button').style.backgroundColor = \"white\";\n    } else if (e.target.id == \"answer2\") {\n      setPic(\"2\");\n      document.getElementById('answer2button').style.backgroundColor = \"black\";\n      document.getElementById('answer1button').style.backgroundColor = \"white\";\n    }\n\n    console.log('answer', e.target.id);\n  }\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitted(true);\n    const elementsArray = [...e.target.elements];\n    console.log('elementsArray', elementsArray);\n\n    try {\n      const data = {\n        name: name,\n        pic: pic,\n        time: serverTimestamp.now()\n      };\n      await addDoc(collection(db, \"Responses\"), data);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          // ig: ig,\n          pic: pic\n        })\n      });\n      let resJson = await res.json();\n\n      if (res.status === 200) {\n        setMessage(\"You responded.\"); // window.location.reload(false);\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function showGame() {\n    console.log('show game');\n    clickMenu.current.style.display = \"block\";\n  }\n\n  function showReply() {\n    console.log('show repl');\n    form.current.style.display = \"block\";\n  }\n\n  let enableBtnClass = ''; // To enable submit button\n\n  useEffect(() => {\n    if (name && pic !== null) {\n      enableBtnClass = classes.enableSubmitBtn;\n    }\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(SubmitContext.Provider, {\n    value: submitted,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.component,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        id: \"game\",\n        onClick: showGame,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: name,\n                id: \"name\",\n                placeholder: \"Name\",\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `${classes.submitBtn} ${enableBtnClass}`,\n                id: \"submit\",\n                name: \"submit\",\n                type: \"submit\",\n                value: \"Submit\",\n                onSubmit: handleSubmit,\n                disabled: toggleBtnEnabler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message\",\n                children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 51\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: pics[0],\n                  width: \"100px\",\n                  height: \"100px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Choice of Answers:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"answer1button\",\n                onClick: answerPic,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: \"answer1\",\n                  src: \"https://imgur.com/b0ZYobY.png\",\n                  width: \"100px\",\n                  height: \"100px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"answer2button\",\n                onClick: answerPic,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: \"answer2\",\n                  src: \"https://imgur.com/ONukpTh.png\",\n                  width: \"100px\",\n                  height: \"100px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Choosing Answer \", pic]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 20\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            id: \"col2\",\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"BUyPM0QhS9nDDZsOrDkT9W4Hxog=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/form.js"],"names":["React","Component","useState","useEffect","useRef","Draggable","collection","addDoc","setDoc","getDocs","doc","onSnapshot","makeStyles","withTheme","db","SubmitContext","pics","serverTimestamp","allSubmissions","useStyles","theme","container","color","submitBtn","padding","background","transition","enableSubmitBtn","imgArray","i","push","Form","classes","clickMenu","form","submitted","setSubmitted","toggleBtnEnabler","setToggleBtnEnabler","name","setName","pic","setPic","message","setMessage","currentData","setCurrentData","regName","setRegName","regIg","setRegIg","regPic","setRegPic","subs","setSubs","ordered","setOrdered","allSubs","orderedPics","picsOptions","unsub","console","log","data","getSubmission","myData","querySnapshot","forEach","largest","no","length","parseInt","key","children","map","val","answerPic","e","target","id","document","getElementById","style","backgroundColor","handleSubmit","preventDefault","elementsArray","elements","time","now","error","res","fetch","method","body","JSON","stringify","resJson","json","status","err","showGame","current","display","showReply","enableBtnClass","component","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,GAA9C,EAAmDC,UAAnD,QAAqE,oBAArE;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,mBAAtC;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GAD4B;AAIvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,IADA;AAETC,IAAAA,UAAU,EAAE,OAFH;AAGTC,IAAAA,UAAU,EAAE;AAHH,GAJ4B;AASvCC,EAAAA,eAAe,EAAE;AACfD,IAAAA,UAAU,EAAE;AADG;AATsB,CAAZ,CAAD,CAA5B;AAcA,MAAME,QAAQ,GAAG,EAAjB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,QAAQ,CAACE,IAAT,CAAc,cAAcD,CAAd,GAAkB,MAAhC;AACD;;AAGD,SAASE,IAAT,GAAgB;AAAA;;AACd,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,QAAMc,SAAS,GAAG7B,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM8B,IAAI,GAAG9B,MAAM,CAAC,IAAD,CAAnB;AAEA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACmC,gBAAD,EAAmBC,mBAAnB,IAA0CpC,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAM,CAACqC,IAAD,EAAOC,OAAP,IAAkBtC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuC,GAAD,EAAMC,MAAN,IAAgBxC,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAAC2C,WAAD,EAAcC,cAAd,IAAgC5C,QAAQ,CAAC;AAAEqC,IAAAA,IAAI,EAAE,EAAR;AAAYE,IAAAA,GAAG,EAAE;AAAjB,GAAD,CAA5C;AACA,MAAI,CAACM,OAAD,EAAUC,UAAV,IAAwB9C,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAAC+C,KAAD,EAAQC,QAAR,IAAoBhD,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACiD,MAAD,EAASC,SAAT,IAAsBlD,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAI,CAACmD,IAAD,EAAOC,OAAP,IAAkBpD,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACqD,OAAD,EAAUC,UAAV,IAAwBtD,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIuD,OAAO,GAAG,EAAd;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,QAAMC,WAAW,GAAG,CAAC,+BAAD,EAAkC,+BAAlC,EAAmE,+BAAnE,EAAoG,+BAApG,CAApB;AAEAxD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMyD,KAAK,GAAGjD,UAAU,CAACD,GAAG,CAACI,EAAD,EAAK,UAAL,EAAiB,sBAAjB,CAAJ,EAA+CJ,GAAD,IAAS;AAC7EmD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BpD,GAAG,CAACqD,IAAJ,EAA9B;AACAjB,MAAAA,cAAc,GAAGpC,GAAG,CAACqD,IAAJ,EAAjB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBjB,WAAW,CAACN,IAAhC;AACD,KAJuB,CAAxB;AAKD,GAPQ,CAAT;AASApC,EAAAA,SAAS,CAAC,MAAM;AACd6D,IAAAA,aAAa,GADC,CAEd;AACA;AAED,GALQ,EAKN,EALM,CAAT;AAOA7D,EAAAA,SAAS,CAAC,MAAM;AACd0D,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B3B,SAA7B;AAED,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;AAKA,QAAM8B,MAAM,GAAG,EAAf;;AAEA,QAAMD,aAAa,GAAG,YAAY;AAChC;AACA,UAAME,aAAa,GAAG,MAAMzD,OAAO,CAACH,UAAU,CAACQ,EAAD,EAAK,cAAL,CAAX,CAAnC;AACAoD,IAAAA,aAAa,CAACC,OAAd,CAAuBzD,GAAD,IAAS;AAC7B;AACA+C,MAAAA,OAAO,CAAC3B,IAAR,CAAapB,GAAG,CAACqD,IAAJ,EAAb;AACD,KAHD;AAIAT,IAAAA,OAAO,CAACG,OAAD,CAAP;AAEA,QAAIW,OAAO,GAAGX,OAAO,CAAC,CAAD,CAAP,CAAWY,EAAzB;;AACA,SAAK,IAAIxC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,OAAO,CAACa,MAA5B,EAAoCzC,CAAC,EAArC,EAAyC;AACvC,UAAI4B,OAAO,CAAC5B,CAAD,CAAP,CAAWwC,EAAX,GAAgBD,OAApB,EAA6B;AAC3BV,QAAAA,WAAW,CAAC5B,IAAZ,CAAiByC,QAAQ,CAACd,OAAO,CAACW,OAAO,GAAG,CAAX,CAAP,CAAqB3B,GAAtB,CAAzB;AACA2B,QAAAA,OAAO,GAAGX,OAAO,CAAC5B,CAAD,CAAP,CAAWwC,EAArB,CAF2B,CAG3B;AACD;AACF;;AACDR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,OAAO,CAACW,OAAO,GAAG,CAAX,CAAP,CAAqBC,EAAnD;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,WAAlC;AACAF,IAAAA,UAAU,CAACE,WAAD,CAAV;AACAV,IAAAA,UAAU,CAACS,OAAO,CAACW,OAAO,GAAG,CAAX,CAAP,CAAqB7B,IAAtB,CAAV;AACD,GArBD;;AAsBA,OAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,OAAO,CAACe,MAA5B,EAAoCzC,CAAC,EAArC,EAAyC;AACvCoC,IAAAA,MAAM,CAACnC,IAAP,CAAY;AAAE0C,MAAAA,GAAG,EAAE3C,CAAC,GAAG,CAAX;AAAcU,MAAAA,IAAI,EAAEoB,WAAW,CAACJ,OAAO,CAAC1B,CAAD,CAAR;AAA/B,KAAZ;AACD;;AAEDgC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCG,MAAhC,EAvEc,CA0Ed;;AACA,QAAMQ,QAAQ,GAAGR,MAAM,CAACS,GAAP,CAAYC,GAAD,iBAC1B;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEA,GAAG,CAACpC,IAAd;AAAoB,MAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,EAAE,EAAEoC,GAAG,CAACH,GAAhB;AAAA,gBAAsBG,GAAG,CAACpC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB,CA3Ec,CAoFd;AACA;AACA;AACA;AACA;;AACA,WAASqC,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,QAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,IAAe,SAAnB,EAA8B;AAC5BrC,MAAAA,MAAM,CAAC,GAAD,CAAN;AACAsC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,eAA/C,GAAiE,OAAjE;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,eAA/C,GAAiE,OAAjE;AAED,KALD,MAMK,IAAIN,CAAC,CAACC,MAAF,CAASC,EAAT,IAAe,SAAnB,EAA8B;AACjCrC,MAAAA,MAAM,CAAC,GAAD,CAAN;AACAsC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,eAA/C,GAAiE,OAAjE;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,eAA/C,GAAiE,OAAjE;AAED;;AACDtB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBe,CAAC,CAACC,MAAF,CAASC,EAA/B;AACD;;AAED,MAAIK,YAAY,GAAG,MAAOP,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACQ,cAAF;AACAjD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMkD,aAAa,GAAG,CAAC,GAAGT,CAAC,CAACC,MAAF,CAASS,QAAb,CAAtB;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BwB,aAA7B;;AAEA,QAAI;AACF,YAAMvB,IAAI,GAAG;AACXxB,QAAAA,IAAI,EAAEA,IADK;AAEXE,QAAAA,GAAG,EAAEA,GAFM;AAGX+C,QAAAA,IAAI,EAAEvE,eAAe,CAACwE,GAAhB;AAHK,OAAb;AAOA,YAAMlF,MAAM,CAACD,UAAU,CAACQ,EAAD,EAAK,WAAL,CAAX,EAA8BiD,IAA9B,CAAZ;AAED,KAVD,CAUE,OAAOc,CAAP,EAAU;AACVhB,MAAAA,OAAO,CAAC6B,KAAR,CAAc,yBAAd,EAAyCb,CAAzC;AACD;;AAID,QAAI;AACF,UAAIc,GAAG,GAAG,MAAMC,KAAK,CAAC,0BAAD,EAA6B;AAChDC,QAAAA,MAAM,EAAE,MADwC;AAEhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBzD,UAAAA,IAAI,EAAEA,IADa;AAEnB;AACAE,UAAAA,GAAG,EAAEA;AAHc,SAAf;AAF0C,OAA7B,CAArB;AAQA,UAAIwD,OAAO,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAApB;;AACA,UAAIP,GAAG,CAACQ,MAAJ,KAAe,GAAnB,EAAwB;AAEtBvD,QAAAA,UAAU,CAAC,gBAAD,CAAV,CAFsB,CAGtB;AAED,OALD,MAKO;AACLA,QAAAA,UAAU,CAAC,oBAAD,CAAV;AACD;AACF,KAlBD,CAkBE,OAAOwD,GAAP,EAAY;AACZvC,MAAAA,OAAO,CAACC,GAAR,CAAYsC,GAAZ;AACD;AACF,GA3CD;;AA6CA,WAASC,QAAT,GAAoB;AAClBxC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA7B,IAAAA,SAAS,CAACqE,OAAV,CAAkBpB,KAAlB,CAAwBqB,OAAxB,GAAkC,OAAlC;AACD;;AACD,WAASC,SAAT,GAAqB;AACnB3C,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA5B,IAAAA,IAAI,CAACoE,OAAL,CAAapB,KAAb,CAAmBqB,OAAnB,GAA6B,OAA7B;AACD;;AAID,MAAIE,cAAc,GAAG,EAArB,CAjKc,CAkKd;;AACAtG,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoC,IAAI,IAAIE,GAAG,KAAK,IAApB,EAA0B;AACxBgE,MAAAA,cAAc,GAAGzE,OAAO,CAACL,eAAzB;AACD;AACF,GAJQ,EAIN,CAACY,IAAD,CAJM,CAAT;AAOA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEJ,SAA/B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEH,OAAO,CAAC0E,SAAxB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,MAAzB;AAAgC,QAAA,OAAO,EAAEL,QAAzC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCAAsB;AAAM,cAAA,QAAQ,EAAEjB,YAAhB;AAAA,sCACpB;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,KAAK,EAAE7C,IAFT;AAEe,gBAAA,EAAE,EAAC,MAFlB;AAGE,gBAAA,WAAW,EAAC,MAHd;AAIE,gBAAA,QAAQ,EAAGsC,CAAD,IAAOrC,OAAO,CAACqC,CAAC,CAACC,MAAF,CAAS6B,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,sBADoB,eAQpB;AAAO,gBAAA,SAAS,EAAG,GAAE3E,OAAO,CAACT,SAAU,IAAGkF,cAAe,EAAzD;AAA4D,gBAAA,EAAE,EAAC,QAA/D;AAAwE,gBAAA,IAAI,EAAC,QAA7E;AAAsF,gBAAA,IAAI,EAAC,QAA3F;AAAoG,gBAAA,KAAK,EAAC,QAA1G;AAAmH,gBAAA,QAAQ,EAAErB,YAA7H;AAA2I,gBAAA,QAAQ,EAAE/C;AAArJ;AAAA;AAAA;AAAA;AAAA,sBARoB,eAUpB;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,0BAA0BM,OAAO,gBAAG;AAAA,4BAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,wBAAH,GAAsB;AAAvD;AAAA;AAAA;AAAA;AAAA,sBAVoB,eAWpB;AAAA,uCAAK;AAAK,kBAAA,GAAG,EAAE3B,IAAI,CAAC,CAAD,CAAd;AAAmB,kBAAA,KAAK,EAAC,OAAzB;AAAiC,kBAAA,MAAM,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,sBAXoB,eAYpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZoB,eAapB;AAAK,gBAAA,EAAE,EAAC,eAAR;AAAwB,gBAAA,OAAO,EAAE4D,SAAjC;AAAA,uCAA4C;AAAK,kBAAA,EAAE,EAAC,SAAR;AAAkB,kBAAA,GAAG,EAAC,+BAAtB;AAAsD,kBAAA,KAAK,EAAC,OAA5D;AAAoE,kBAAA,MAAM,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,sBAboB,eAcpB;AAAK,gBAAA,EAAE,EAAC,eAAR;AAAwB,gBAAA,OAAO,EAAEA,SAAjC;AAAA,uCAA4C;AAAK,kBAAA,EAAE,EAAC,SAAR;AAAkB,kBAAA,GAAG,EAAC,+BAAtB;AAAsD,kBAAA,KAAK,EAAC,OAA5D;AAAoE,kBAAA,MAAM,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA;AAA5C;AAAA;AAAA;AAAA;AAAA,sBAdoB,eAepB;AAAA,uCAAK;AAAA,iDAAoBnC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,sBAfoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,kBADF,eAmBE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAwB,YAAA,EAAE,EAAC,MAA3B;AAAA,sBACGgC;AADH;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAzMQ1C,I;UACSZ,S;;;KADTY,I;AA2MT,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { makeStyles, withTheme } from '@material-ui/core';\nimport db from './utils/firebase.config';\nimport SubmitContext from './utils/submitContext';\nimport { pics } from './Pics';\nimport serverTimestamp from './utils/serverTimestamp';\nimport { allSubmissions } from './utils/allSubmission';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    color: 'white',\n  },\n  submitBtn: {\n    padding: '1%',\n    background: 'white',\n    transition: 'all 500ms ease'\n  },\n  enableSubmitBtn: {\n    transition: 'all 500ms ease'\n  }\n}));\n\nconst imgArray = [];\nfor (let i = 0; i < 10; i++) {\n  imgArray.push('./assets/' + i + '.jpg');\n}\n\n\nfunction Form() {\n  const classes = useStyles();\n\n  const clickMenu = useRef(null);\n  const form = useRef(null);\n\n  const [submitted, setSubmitted] = useState(false);\n  const [toggleBtnEnabler, setToggleBtnEnabler] = useState(false);\n\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let [currentData, setCurrentData] = useState({ name: \"\", pic: \"\" });\n  let [regName, setRegName] = useState(\"\");\n  let [regIg, setRegIg] = useState(\"\");\n  let [regPic, setRegPic] = useState(0);\n  let [subs, setSubs] = useState([]);\n  let [ordered, setOrdered] = useState([]);\n  let allSubs = [];\n  let orderedPics = [];\n  const picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n\n  useEffect(() => {\n    // CURRENT DATA\n    const unsub = onSnapshot(doc(db, \"Response\", \"rGKZUj2fF5JpWiYZmCDJ\"), (doc) => {\n      console.log(\"Current data: \", doc.data());\n      setCurrentData = doc.data();\n      console.log('name', currentData.name);\n    });\n  });\n\n  useEffect(() => {\n    getSubmission();\n    // console.log('all', allSubmissions);\n    // allSubmissions.then(result => setAthenaVAl(result));\n\n  }, []);\n\n  useEffect(() => {\n    console.log('submit change', submitted);\n\n  }, [submitted]);\n\n  const myData = [];\n\n  const getSubmission = async () => {\n    // Get all documents in a collection\n    const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n    querySnapshot.forEach((doc) => {\n      // console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n    });\n    setSubs(allSubs);\n\n    let largest = allSubs[0].no;\n    for (let i = 1; i < allSubs.length; i++) {\n      if (allSubs[i].no > largest) {\n        orderedPics.push(parseInt(allSubs[largest - 1].pic));\n        largest = allSubs[i].no;\n        // orderedSubs.push(largest);\n      }\n    }\n    console.log('All Submission', allSubs[largest - 1].no);\n    console.log('Ordered Submission', orderedPics);\n    setOrdered(orderedPics);\n    setRegName(allSubs[largest - 1].name);\n  };\n  for (let i = 0; i < ordered.length; i++) {\n    myData.push({ key: i + 1, name: picsOptions[ordered[i]] })\n  }\n\n  console.log(' Submission Pics', myData);\n\n\n  // the loop. it'll return array of react node.\n  const children = myData.map((val) => (\n    <div>\n      <img src={val.name} width=\"50%\"></img>\n      <p> (Your text goes here. Also, you can place other elements within this parent div. </p>\n\n      <button id={val.key}>{val.name}</button>\n    </div>\n  ));\n\n  //   const currSnapshot = onSnapshot(doc(db, \"currResponse\", \"currUser\"), (doc) => {\n  //     setRegName(doc.data().name);\n  //     setRegIg(doc.data().ig);\n  //     setRegPic(doc.data().pic);\n  // });\n  function answerPic(e) {\n    if (e.target.id == \"answer1\") {\n      setPic(\"1\");\n      document.getElementById('answer1button').style.backgroundColor = \"black\";\n      document.getElementById('answer2button').style.backgroundColor = \"white\";\n\n    }\n    else if (e.target.id == \"answer2\") {\n      setPic(\"2\");\n      document.getElementById('answer2button').style.backgroundColor = \"black\";\n      document.getElementById('answer1button').style.backgroundColor = \"white\";\n\n    }\n    console.log('answer', e.target.id)\n  }\n\n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n    const elementsArray = [...e.target.elements];\n    console.log('elementsArray', elementsArray);\n\n    try {\n      const data = {\n        name: name,\n        pic: pic,\n        time: serverTimestamp.now(),\n      }\n\n\n      await addDoc(collection(db, \"Responses\"), data);\n\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n\n\n\n    try {\n      let res = await fetch(\"https://httpbin.org/post\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: name,\n          // ig: ig,\n          pic: pic,\n        }),\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n\n        setMessage(\"You responded.\");\n        // window.location.reload(false);\n\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  function showGame() {\n    console.log('show game')\n    clickMenu.current.style.display = \"block\";\n  }\n  function showReply() {\n    console.log('show repl')\n    form.current.style.display = \"block\";\n  }\n\n\n\n  let enableBtnClass = '';\n  // To enable submit button\n  useEffect(() => {\n    if (name && pic !== null) {\n      enableBtnClass = classes.enableSubmitBtn;\n    }\n  }, [name]);\n\n\n  return (\n    <SubmitContext.Provider value={submitted}>\n      <div className={classes.component}>\n        <div className=\"menu\" id=\"game\" onClick={showGame}>\n          <div className=\"flex\">\n            <div className=\"form\"><form onSubmit={handleSubmit}>\n              <input\n                type=\"text\"\n                value={name} id='name'\n                placeholder=\"Name\"\n                onChange={(e) => setName(e.target.value)}\n              />\n\n              <input className={`${classes.submitBtn} ${enableBtnClass}`} id=\"submit\" name=\"submit\" type=\"submit\" value=\"Submit\" onSubmit={handleSubmit} disabled={toggleBtnEnabler} />\n\n              <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n              <div><img src={pics[0]} width='100px' height='100px' /></div>\n              <div>Choice of Answers:</div>\n              <div id=\"answer1button\" onClick={answerPic}><img id=\"answer1\" src=\"https://imgur.com/b0ZYobY.png\" width='100px' height='100px' /></div>\n              <div id=\"answer2button\" onClick={answerPic}><img id=\"answer2\" src=\"https://imgur.com/ONukpTh.png\" width='100px' height='100px' /></div>\n              <div><p>Choosing Answer {pic}</p></div>\n            </form>\n            </div>\n            <div className=\"column\" id=\"col2\">\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </SubmitContext.Provider>\n  );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}