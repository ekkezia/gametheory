{"ast":null,"code":"import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nlet allSubs = [];\nlet orderedNo = [];\nlet orderedPics = [];\nlet orderedNames = [];\nlet myData = [];\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png'];\nconst getSubmission = getDocs(collection(db, \"currResponse\")).then(response => {\n  response.forEach(doc => {\n    console.log('Submitter Name:', doc.data().name);\n    allSubs.push(doc.data());\n  });\n  let largest = allSubs[0].no;\n\n  for (let i = 1; i < allSubs.length; i++) {\n    if (allSubs[i].no > largest) {\n      orderedNo.push(parseInt(allSubs[largest - 1].no));\n      orderedNames.push(allSubs[largest - 1].name);\n      orderedPics.push(parseInt(allSubs[largest - 1].pic));\n      largest = allSubs[i].no;\n    }\n  }\n\n  for (let i = 0; i < orderedPics.length; i++) {\n    myData.push({\n      key: i + 1,\n      no: orderedNo[i],\n      name: orderedNames[i],\n      picture: picsOptions[orderedPics[i]]\n    });\n  }\n});\nexport const allSubsInfo = myData;","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/utils/allSubmission.js"],"names":["React","Component","useState","useEffect","useRef","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","allSubs","orderedNo","orderedPics","orderedNames","myData","picsOptions","getSubmission","then","response","forEach","console","log","data","name","push","largest","no","i","length","parseInt","pic","key","picture","allSubsInfo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,GAA9C,EAAmDC,UAAnD,QAAqE,oBAArE;AAGA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,MAAM,GAAG,EAAb;AAEA,MAAMC,WAAW,GAAG,CAAC,+BAAD,EAAkC,+BAAlC,EAAmE,+BAAnE,EAAoG,+BAApG,CAApB;AAIA,MAAMC,aAAa,GAAGT,OAAO,CAACH,UAAU,CAACD,EAAD,EAAK,cAAL,CAAX,CAAP,CACrBc,IADqB,CAChBC,QAAQ,IAAI;AACZA,EAAAA,QAAQ,CAACC,OAAT,CAAkBX,GAAD,IAAS;AAC1BY,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bb,GAAG,CAACc,IAAJ,GAAWC,IAA1C;AACAb,IAAAA,OAAO,CAACc,IAAR,CAAahB,GAAG,CAACc,IAAJ,EAAb;AACL,GAHK;AAMN,MAAIG,OAAO,GAAGf,OAAO,CAAC,CAAD,CAAP,CAAWgB,EAAzB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,OAAO,CAACkB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIjB,OAAO,CAACiB,CAAD,CAAP,CAAWD,EAAX,GAAgBD,OAApB,EAA6B;AAC3Bd,MAAAA,SAAS,CAACa,IAAV,CAAeK,QAAQ,CAACnB,OAAO,CAACe,OAAO,GAAG,CAAX,CAAP,CAAqBC,EAAtB,CAAvB;AACAb,MAAAA,YAAY,CAACW,IAAb,CAAkBd,OAAO,CAACe,OAAO,GAAG,CAAX,CAAP,CAAqBF,IAAvC;AACAX,MAAAA,WAAW,CAACY,IAAZ,CAAiBK,QAAQ,CAACnB,OAAO,CAACe,OAAO,GAAG,CAAX,CAAP,CAAqBK,GAAtB,CAAzB;AAEAL,MAAAA,OAAO,GAAGf,OAAO,CAACiB,CAAD,CAAP,CAAWD,EAArB;AACD;AACF;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,WAAW,CAACgB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3Cb,IAAAA,MAAM,CAACU,IAAP,CAAY;AAAEO,MAAAA,GAAG,EAAEJ,CAAC,GAAG,CAAX;AAAcD,MAAAA,EAAE,EAAEf,SAAS,CAACgB,CAAD,CAA3B;AAAgCJ,MAAAA,IAAI,EAAEV,YAAY,CAACc,CAAD,CAAlD;AAAuDK,MAAAA,OAAO,EAAEjB,WAAW,CAACH,WAAW,CAACe,CAAD,CAAZ;AAA3E,KAAZ;AACD;AACA,CAtBqB,CAAtB;AAwBA,OAAO,MAAMM,WAAW,GAAGnB,MAApB","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\n\nlet allSubs = [];\nlet orderedNo = [];\nlet orderedPics = [];\nlet orderedNames = [];\nlet myData = [];\n\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n\n\n\nconst getSubmission = getDocs(collection(db, \"currResponse\"))\n.then(response => {\n      response.forEach((doc) => {\n      console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n});\n\n\nlet largest = allSubs[0].no;\nfor (let i = 1; i < allSubs.length; i++) {\n  if (allSubs[i].no > largest) {\n    orderedNo.push(parseInt(allSubs[largest - 1].no));\n    orderedNames.push(allSubs[largest - 1].name);\n    orderedPics.push(parseInt(allSubs[largest - 1].pic));\n\n    largest = allSubs[i].no;\n  }\n}\n\nfor (let i = 0; i < orderedPics.length; i++) {\n  myData.push({ key: i + 1, no: orderedNo[i], name: orderedNames[i], picture: picsOptions[orderedPics[i]] })\n}\n});\n\nexport const allSubsInfo = myData;"]},"metadata":{},"sourceType":"module"}