{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/Intro.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport SubmitContext from './utils/submitContext';\nimport { allSubsInfo } from './utils/allSubmission';\nimport db from './utils/firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    margin: '0',\n    background: 'rgba(255,0.5)',\n    backdropFilter: 'blur(15px)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 2s ease'\n  },\n  removeContainer: {\n    backdropFilter: 'blur(0px)',\n    visibility: 'hidden',\n    transition: 'all 2s ease'\n  },\n  image: {\n    border: '5px solid black',\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 1s ease',\n    color: 'red'\n  },\n  removeImage: {\n    border: '5px solid red',\n    visibility: 'hidden',\n    display: 'none',\n    transition: 'all 1s ease'\n  }\n}));\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']; // let latestSubmission = picsOptions[allSubsInfo[allSubsInfo.length - 1].pic];\n\nexport default function Intro(_ref) {\n  _s();\n\n  let {\n    allSubmissions\n  } = _ref;\n  const classes = useStyles();\n  const submitContext = useContext(SubmitContext); // const [latestSubmission, setLatestSubmission] = useState(null);\n\n  const [transitionContainer, setTransitionContainer] = useState(false);\n  const [transitionImage, setTransitionImage] = useState(false);\n  const [allSubs, setAllSubs] = useState([]);\n\n  const handleReveal = () => {\n    setTransitionContainer(classes.removeContainer);\n    setTransitionImage(classes.removeImage);\n  };\n\n  let currentImg;\n  useEffect(() => {\n    let responseArray = [];\n    getDocs(collection(db, \"Responses\")).then(response => {\n      response.forEach(doc => {\n        responseArray.push(doc.data());\n        setAllSubs(responseArray);\n      });\n    });\n  }, []);\n  console.log('all subs in content', allSubs);\n  const latestSubmission = Object.keys(allSubs); // const allSubmissionso = Object.keys(allSubs);\n\n  console.log('all', latestSubmission);\n  useEffect(() => {\n    if (submitContext.submitted) {\n      handleReveal();\n    }\n\n    return;\n  }, [submitContext.submitted]); // console.log('res array intro', allSubmissions[0].pic);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.container} ${transitionContainer}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Intro, \"nb5NIibho8M7G79H5BUobjH4ajA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Intro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Intro\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/Intro.js"],"names":["makeStyles","useState","useContext","useEffect","SubmitContext","allSubsInfo","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","useStyles","theme","container","position","top","left","width","height","margin","background","backdropFilter","display","justifyContent","alignItems","visibility","transition","removeContainer","image","border","color","removeImage","picsOptions","Intro","allSubmissions","classes","submitContext","transitionContainer","setTransitionContainer","transitionImage","setTransitionImage","allSubs","setAllSubs","handleReveal","currentImg","responseArray","then","response","forEach","push","data","console","log","latestSubmission","Object","keys","submitted"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport SubmitContext from './utils/submitContext';\nimport { allSubsInfo } from './utils/allSubmission';\nimport db from './utils/firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    margin: '0',\n    background: 'rgba(255,0.5)',\n    backdropFilter: 'blur(15px)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 2s ease',\n  },\n  removeContainer: {\n    backdropFilter: 'blur(0px)',\n    visibility: 'hidden',\n    transition: 'all 2s ease',\n  },\n  image: {\n    border: '5px solid black',\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 1s ease',\n    color: 'red'\n  },\n  removeImage: {\n    border: '5px solid red',\n    visibility: 'hidden',\n    display: 'none',\n    transition: 'all 1s ease'\n  }\n}));\n\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n// let latestSubmission = picsOptions[allSubsInfo[allSubsInfo.length - 1].pic];\n\nexport default function Intro({ allSubmissions }) {\n  const classes = useStyles();\n  const submitContext = useContext(SubmitContext);\n  // const [latestSubmission, setLatestSubmission] = useState(null);\n  const [transitionContainer, setTransitionContainer] = useState(false);\n  const [transitionImage, setTransitionImage] = useState(false);\n  const [allSubs, setAllSubs] = useState([])\n\n\n  const handleReveal = () => {\n    setTransitionContainer(classes.removeContainer);\n    setTransitionImage(classes.removeImage);\n  }\n\n  let currentImg;\n\n  useEffect(() => {\n    let responseArray = [];\n    getDocs(collection(db, \"Responses\"))\n      .then(response => {\n        response.forEach((doc) => {\n          responseArray.push(doc.data());\n          setAllSubs(responseArray);\n        });\n      });\n    }, []);\n\n    console.log('all subs in content', allSubs);\n  const latestSubmission = Object.keys(allSubs);\n\n  // const allSubmissionso = Object.keys(allSubs);\nconsole.log('all', latestSubmission)\n\n\n  useEffect(() => {\n    if (submitContext.submitted) {\n      handleReveal();\n    }\n    return;\n  }, [submitContext.submitted]);\n\n  // console.log('res array intro', allSubmissions[0].pic);\n\n  return (\n    <div className={`${classes.container} ${transitionContainer}`}>\n      {/* <img className={`${classes.image} ${classes.removeImage}}`} id=\"answer1\" src={picsOptions[0]} width='500px' height='500px' /> */}\n      {/* {allSubmissions} */}\n      {/* <div>{latestSubmission}</div> */}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}