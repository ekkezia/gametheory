{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\nfunction AllSubmissions() {\n  _s();\n\n  let [subs, setSubs] = useState([]);\n  let [ordered, setOrdered] = useState([]);\n  let allSubs = [];\n  let orderedPics = [];\n  const myData = [];\n  const picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png'];\n\n  const getSubmission = async () => {\n    // Get all documents in a collection\n    const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n    querySnapshot.forEach(doc => {\n      // console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n    });\n    setSubs(allSubs);\n    let largest = allSubs[0].no;\n\n    for (let i = 1; i < allSubs.length; i++) {\n      if (allSubs[i].no > largest) {\n        orderedPics.push(parseInt(allSubs[largest - 1].pic));\n        largest = allSubs[i].no; // orderedSubs.push(largest);\n      }\n    }\n\n    console.log('All Submission', allSubs[largest - 1].no);\n    console.log('Ordered Submission', orderedPics);\n    setOrdered(orderedPics); // setRegName(allSubs[largest - 1].name);\n  };\n\n  for (let i = 0; i < ordered.length; i++) {\n    myData.push({\n      key: i + 1,\n      picture: picsOptions[ordered[i]]\n    });\n  }\n\n  console.log(' Submission Pics', myData);\n}\n\n_s(AllSubmissions, \"1/rV0bEs31M/Ktyq0R0j2arW+h0=\");\n\n_c = AllSubmissions;\nexport default AllSubmissions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllSubmissions\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/utils/allSubmission.js"],"names":["React","Component","useState","useEffect","useRef","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","AllSubmissions","subs","setSubs","ordered","setOrdered","allSubs","orderedPics","myData","picsOptions","getSubmission","querySnapshot","forEach","push","data","largest","no","i","length","parseInt","pic","console","log","key","picture"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,EAAP,MAAe,mBAAf;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,GAA9C,EAAmDC,UAAnD,QAAqE,oBAArE;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIe,OAAO,GAAG,EAAd;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,QAAMC,MAAM,GAAG,EAAf;AAEA,QAAMC,WAAW,GAAG,CAAC,+BAAD,EAAkC,+BAAlC,EAAmE,+BAAnE,EAAoG,+BAApG,CAApB;;AAGA,QAAMC,aAAa,GAAG,YAAY;AAChC;AACA,UAAMC,aAAa,GAAG,MAAMb,OAAO,CAACH,UAAU,CAACD,EAAD,EAAK,cAAL,CAAX,CAAnC;AACAiB,IAAAA,aAAa,CAACC,OAAd,CAAuBb,GAAD,IAAS;AAC7B;AACAO,MAAAA,OAAO,CAACO,IAAR,CAAad,GAAG,CAACe,IAAJ,EAAb;AACD,KAHD;AAIAX,IAAAA,OAAO,CAACG,OAAD,CAAP;AAEA,QAAIS,OAAO,GAAGT,OAAO,CAAC,CAAD,CAAP,CAAWU,EAAzB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,OAAO,CAACY,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIX,OAAO,CAACW,CAAD,CAAP,CAAWD,EAAX,GAAgBD,OAApB,EAA6B;AAC3BR,QAAAA,WAAW,CAACM,IAAZ,CAAiBM,QAAQ,CAACb,OAAO,CAACS,OAAO,GAAG,CAAX,CAAP,CAAqBK,GAAtB,CAAzB;AACAL,QAAAA,OAAO,GAAGT,OAAO,CAACW,CAAD,CAAP,CAAWD,EAArB,CAF2B,CAG3B;AACD;AACF;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BhB,OAAO,CAACS,OAAO,GAAG,CAAX,CAAP,CAAqBC,EAAnD;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCf,WAAlC;AACAF,IAAAA,UAAU,CAACE,WAAD,CAAV,CAnBgC,CAoBhC;AACD,GArBD;;AAsBA,OAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,OAAO,CAACc,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCT,IAAAA,MAAM,CAACK,IAAP,CAAY;AAAEU,MAAAA,GAAG,EAAEN,CAAC,GAAG,CAAX;AAAcO,MAAAA,OAAO,EAAEf,WAAW,CAACL,OAAO,CAACa,CAAD,CAAR;AAAlC,KAAZ;AACD;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCd,MAAhC;AACD;;GArCQP,c;;KAAAA,c;AAuCT,eAAeA,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { useState, useEffect, useRef } from \"react\";\nimport db from './firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\nfunction AllSubmissions() {\n  let [subs, setSubs] = useState([]);\n  let [ordered, setOrdered] = useState([]);\n  let allSubs = [];\n  let orderedPics = [];\n  const myData = [];\n\n  const picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n\n\n  const getSubmission = async () => {\n    // Get all documents in a collection\n    const querySnapshot = await getDocs(collection(db, \"currResponse\"));\n    querySnapshot.forEach((doc) => {\n      // console.log('Submitter Name:', doc.data().name);\n      allSubs.push(doc.data());\n    });\n    setSubs(allSubs);\n\n    let largest = allSubs[0].no;\n    for (let i = 1; i < allSubs.length; i++) {\n      if (allSubs[i].no > largest) {\n        orderedPics.push(parseInt(allSubs[largest - 1].pic));\n        largest = allSubs[i].no;\n        // orderedSubs.push(largest);\n      }\n    }\n    console.log('All Submission', allSubs[largest - 1].no);\n    console.log('Ordered Submission', orderedPics);\n    setOrdered(orderedPics);\n    // setRegName(allSubs[largest - 1].name);\n  };\n  for (let i = 0; i < ordered.length; i++) {\n    myData.push({ key: i + 1, picture: picsOptions[ordered[i]] })\n  }\n\n  console.log(' Submission Pics', myData);\n}\n\nexport default AllSubmissions;"]},"metadata":{},"sourceType":"module"}