{"ast":null,"code":"var _jsxFileName = \"/Users/ek/gametheory/src/components/Intro.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport SubmitContext from './utils/submitContext';\nimport { allSubsInfo } from './utils/allSubmission';\nimport db from './utils/firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    margin: '0',\n    background: 'rgba(255,0.5)',\n    backdropFilter: 'blur(15px)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transition: 'all 2s ease'\n  },\n  removeContainer: {\n    backdropFilter: 'blur(0px)',\n    transition: 'all 2s ease'\n  },\n  image: {\n    border: '5px solid black',\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 1s ease'\n  },\n  removeImage: {\n    border: '5px solid red',\n    visibility: 'hidden',\n    display: 'none',\n    transition: 'all 1s ease'\n  }\n}));\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']; // let latestSubmission = picsOptions[allSubsInfo[allSubsInfo.length - 1].pic];\n\nexport default function Intro(_ref) {\n  _s();\n\n  let {\n    allSubmissions\n  } = _ref;\n  const classes = useStyles();\n  const submitContext = useContext(SubmitContext);\n  const [latestSubmission, setLatestSubmission] = useState(null);\n  const [transitionContainer, setTransitionContainer] = useState(false);\n  const [transitionImage, setTransitionImage] = useState(false);\n  const [allSubs, setAllSubs] = useState([]);\n\n  const handleReveal = () => {\n    setTransitionContainer(classes.removeContainer);\n    setTransitionImage(classes.removeImage);\n  };\n\n  useEffect(() => {\n    let responseArray = [];\n    getDocs(collection(db, \"Responses\")).then(response => {\n      response.forEach(doc => {\n        // const name = doc.data().name;\n        // const pic = doc.data().pic;\n        // const time = doc.data().timestamp;\n        responseArray.push(doc.data());\n      });\n    });\n    setAllSubs(responseArray);\n  }, []);\n  useEffect(() => {\n    if (submitContext.submitted) {\n      handleReveal();\n    }\n\n    return;\n  }, [submitContext.submitted]);\n  console.log('res array intro', resultPic);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.container} ${transitionContainer}`,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: `${classes.image} ${classes.removeImage}}`,\n      id: \"answer1\",\n      src: picsOptions[0],\n      width: \"500px\",\n      height: \"500px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Intro, \"Fp2vh/2cqQjc6g4yC+NFc2b1fo8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Intro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Intro\");","map":{"version":3,"sources":["/Users/ek/gametheory/src/components/Intro.js"],"names":["makeStyles","useState","useContext","useEffect","SubmitContext","allSubsInfo","db","collection","addDoc","setDoc","getDocs","doc","onSnapshot","useStyles","theme","container","position","top","left","width","height","margin","background","backdropFilter","display","justifyContent","alignItems","transition","removeContainer","image","border","visibility","removeImage","picsOptions","Intro","allSubmissions","classes","submitContext","latestSubmission","setLatestSubmission","transitionContainer","setTransitionContainer","transitionImage","setTransitionImage","allSubs","setAllSubs","handleReveal","responseArray","then","response","forEach","push","data","submitted","console","log","resultPic"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAO,qCAAP;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,GAA9C,EAAmDC,UAAnD,QAAqE,oBAArE;;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,OADD;AAETC,IAAAA,GAAG,EAAE,CAFI;AAGTC,IAAAA,IAAI,EAAE,CAHG;AAITC,IAAAA,KAAK,EAAE,OAJE;AAKTC,IAAAA,MAAM,EAAE,OALC;AAMTC,IAAAA,MAAM,EAAE,GANC;AAOTC,IAAAA,UAAU,EAAE,eAPH;AAQTC,IAAAA,cAAc,EAAE,YARP;AASTC,IAAAA,OAAO,EAAE,MATA;AAUTC,IAAAA,cAAc,EAAE,QAVP;AAWTC,IAAAA,UAAU,EAAE,QAXH;AAYTC,IAAAA,UAAU,EAAE;AAZH,GAD4B;AAevCC,EAAAA,eAAe,EAAE;AACfL,IAAAA,cAAc,EAAE,WADD;AAEfI,IAAAA,UAAU,EAAE;AAFG,GAfsB;AAmBvCE,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,iBADH;AAELd,IAAAA,QAAQ,EAAE,UAFL;AAGLQ,IAAAA,OAAO,EAAE,MAHJ;AAILC,IAAAA,cAAc,EAAE,QAJX;AAKLC,IAAAA,UAAU,EAAE,QALP;AAMLK,IAAAA,UAAU,EAAE,SANP;AAOLJ,IAAAA,UAAU,EAAE;AAPP,GAnBgC;AA4BvCK,EAAAA,WAAW,EAAE;AACXF,IAAAA,MAAM,EAAE,eADG;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGXP,IAAAA,OAAO,EAAE,MAHE;AAIXG,IAAAA,UAAU,EAAE;AAJD;AA5B0B,CAAZ,CAAD,CAA5B;AAoCA,MAAMM,WAAW,GAAG,CAAC,+BAAD,EAAkC,+BAAlC,EAAmE,+BAAnE,EAAoG,+BAApG,CAApB,C,CACA;;AAEA,eAAe,SAASC,KAAT,OAAmC;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAChD,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;AACA,QAAMwB,aAAa,GAAGnC,UAAU,CAACE,aAAD,CAAhC;AACA,QAAM,CAACkC,gBAAD,EAAmBC,mBAAnB,IAA0CtC,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACuC,mBAAD,EAAsBC,sBAAtB,IAAgDxC,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACyC,eAAD,EAAkBC,kBAAlB,IAAwC1C,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAAC2C,OAAD,EAAUC,UAAV,IAAwB5C,QAAQ,CAAC,EAAD,CAAtC;;AAGA,QAAM6C,YAAY,GAAG,MAAM;AACzBL,IAAAA,sBAAsB,CAACL,OAAO,CAACR,eAAT,CAAtB;AACAe,IAAAA,kBAAkB,CAACP,OAAO,CAACJ,WAAT,CAAlB;AACD,GAHD;;AAKA7B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4C,aAAa,GAAG,EAApB;AACArC,IAAAA,OAAO,CAACH,UAAU,CAACD,EAAD,EAAK,WAAL,CAAX,CAAP,CACG0C,IADH,CACQC,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,CAACC,OAAT,CAAkBvC,GAAD,IAAS;AACxB;AACA;AACA;AACAoC,QAAAA,aAAa,CAACI,IAAd,CAAmBxC,GAAG,CAACyC,IAAJ,EAAnB;AACD,OALD;AAMD,KARH;AAUEP,IAAAA,UAAU,CAACE,aAAD,CAAV;AAEH,GAdQ,EAcN,EAdM,CAAT;AAgBA5C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGkC,aAAa,CAACgB,SAAjB,EAA2B;AACzBP,MAAAA,YAAY;AACb;;AACD;AACD,GALQ,EAKN,CAACT,aAAa,CAACgB,SAAf,CALM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,SAA/B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEpB,OAAO,CAACrB,SAAU,IAAGyB,mBAAoB,EAA5D;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,GAAEJ,OAAO,CAACP,KAAM,IAAGO,OAAO,CAACJ,WAAY,GAAxD;AAA4D,MAAA,EAAE,EAAC,SAA/D;AAAyE,MAAA,GAAG,EAAEC,WAAW,CAAC,CAAD,CAAzF;AAA8F,MAAA,KAAK,EAAC,OAApG;AAA4G,MAAA,MAAM,EAAC;AAAnH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3CuBC,K;UACNrB,S;;;KADMqB,K","sourcesContent":["import { makeStyles } from '@material-ui/core';\nimport \"react-simple-flex-grid/lib/main.css\";\nimport { useState, useContext, useEffect } from \"react\";\nimport SubmitContext from './utils/submitContext';\nimport { allSubsInfo } from './utils/allSubmission';\nimport db from './utils/firebase.config';\nimport { collection, addDoc, setDoc, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    margin: '0',\n    background: 'rgba(255,0.5)',\n    backdropFilter: 'blur(15px)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transition: 'all 2s ease',\n  },\n  removeContainer: {\n    backdropFilter: 'blur(0px)',\n    transition: 'all 2s ease',\n  },\n  image: {\n    border: '5px solid black',\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    visibility: 'visible',\n    transition: 'all 1s ease',\n  },\n  removeImage: {\n    border: '5px solid red',\n    visibility: 'hidden',\n    display: 'none',\n    transition: 'all 1s ease'\n  }\n}));\n\nconst picsOptions = ['https://imgur.com/ONukpTh.png', 'https://imgur.com/rY8d0Ye.png', 'https://imgur.com/xXAYEcH.png', 'https://imgur.com/aWS9TAH.png']\n// let latestSubmission = picsOptions[allSubsInfo[allSubsInfo.length - 1].pic];\n\nexport default function Intro({ allSubmissions }) {\n  const classes = useStyles();\n  const submitContext = useContext(SubmitContext);\n  const [latestSubmission, setLatestSubmission] = useState(null);\n  const [transitionContainer, setTransitionContainer] = useState(false);\n  const [transitionImage, setTransitionImage] = useState(false);\n  const [allSubs, setAllSubs] = useState([])\n\n\n  const handleReveal = () => {\n    setTransitionContainer(classes.removeContainer);\n    setTransitionImage(classes.removeImage);\n  }\n\n  useEffect(() => {\n    let responseArray = [];\n    getDocs(collection(db, \"Responses\"))\n      .then(response => {\n        response.forEach((doc) => {\n          // const name = doc.data().name;\n          // const pic = doc.data().pic;\n          // const time = doc.data().timestamp;\n          responseArray.push(doc.data());\n        });\n      });\n\n      setAllSubs(responseArray);\n\n  }, []);\n\n  useEffect(() => {\n    if(submitContext.submitted){\n      handleReveal();\n    }\n    return;\n  }, [submitContext.submitted]);\n  console.log('res array intro', resultPic);\n\n  return (\n    <div className={`${classes.container} ${transitionContainer}`}>\n      <img className={`${classes.image} ${classes.removeImage}}`} id=\"answer1\" src={picsOptions[0]} width='500px' height='500px' />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}